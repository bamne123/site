"use strict";(self.webpackChunkmy_stie=self.webpackChunkmy_stie||[]).push([[1187],{4294:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>r,toc:()=>t});const r=JSON.parse('{"id":"leetcode/days-roadmap","title":"150-Day Roadmap","description":"This document outlines a 150-day plan to prepare for MAANG interviews.","source":"@site/docs/leetcode/150-days-roadmap.md","sourceDirName":"leetcode","slug":"/leetcode/days-roadmap","permalink":"/site/docs/leetcode/days-roadmap","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/leetcode/150-days-roadmap.md","tags":[],"version":"current","sidebarPosition":150,"frontMatter":{},"sidebar":"leetcodeSidebar","previous":{"title":"Welcome","permalink":"/site/docs/leetcode/intro"},"next":{"title":"1 - Two Sum","permalink":"/site/docs/leetcode/Easy/Two Sum"}}');var l=i(4848),d=i(8453);const a={},o="150-Day Roadmap",s={},t=[{value:"Day-wise Breakdown",id:"day-wise-breakdown",level:2},{value:"DAY 1",id:"day-1",level:3},{value:"DAY 2",id:"day-2",level:3},{value:"DAY 3",id:"day-3",level:3},{value:"DAY 4",id:"day-4",level:3},{value:"DAY 5",id:"day-5",level:3},{value:"DAY 6",id:"day-6",level:3},{value:"DAY 7",id:"day-7",level:3},{value:"DAY 8",id:"day-8",level:3},{value:"DAY 9",id:"day-9",level:3},{value:"DAY 10",id:"day-10",level:3},{value:"DAY 11",id:"day-11",level:3},{value:"DAY 12",id:"day-12",level:3},{value:"DAY 13",id:"day-13",level:3},{value:"DAY 14",id:"day-14",level:3},{value:"DAY 15",id:"day-15",level:3},{value:"DAY 16",id:"day-16",level:3},{value:"DAY 17",id:"day-17",level:3},{value:"DAY 18",id:"day-18",level:3},{value:"DAY 19",id:"day-19",level:3},{value:"DAY 20",id:"day-20",level:3},{value:"DAY 21",id:"day-21",level:3},{value:"DAY 22",id:"day-22",level:3},{value:"DAY 23",id:"day-23",level:3},{value:"DAY 24",id:"day-24",level:3},{value:"DAY 25",id:"day-25",level:3},{value:"DAY 26",id:"day-26",level:3},{value:"DAY 27",id:"day-27",level:3},{value:"DAY 28",id:"day-28",level:3},{value:"DAY 29",id:"day-29",level:3},{value:"DAY 30",id:"day-30",level:3},{value:"DAY 31",id:"day-31",level:3},{value:"Day 32",id:"day-32",level:3},{value:"Day 33",id:"day-33",level:3},{value:"Day 34",id:"day-34",level:3},{value:"Day 35",id:"day-35",level:3},{value:"Day 36",id:"day-36",level:3},{value:"Day 37",id:"day-37",level:3},{value:"Day 38",id:"day-38",level:3},{value:"Day 39",id:"day-39",level:3},{value:"Day 40",id:"day-40",level:3},{value:"Day 41",id:"day-41",level:3},{value:"Day 42",id:"day-42",level:3},{value:"Day 43",id:"day-43",level:3},{value:"Day 44",id:"day-44",level:3},{value:"Day 45",id:"day-45",level:3},{value:"Day 46",id:"day-46",level:3},{value:"Day 47",id:"day-47",level:3},{value:"Day 48",id:"day-48",level:3},{value:"Day 49",id:"day-49",level:3},{value:"Day 50",id:"day-50",level:3},{value:"Day 51",id:"day-51",level:3},{value:"Day 52",id:"day-52",level:3},{value:"Day 53",id:"day-53",level:3},{value:"Day 54",id:"day-54",level:3},{value:"Day 55",id:"day-55",level:3},{value:"Day 56",id:"day-56",level:3},{value:"Day 57",id:"day-57",level:3},{value:"Day 58",id:"day-58",level:3},{value:"Day 59",id:"day-59",level:3},{value:"Day 60",id:"day-60",level:3},{value:"Day 61",id:"day-61",level:3},{value:"Day 62",id:"day-62",level:3},{value:"Day 63",id:"day-63",level:3},{value:"Day 64",id:"day-64",level:3},{value:"Day 65",id:"day-65",level:3},{value:"Day 66",id:"day-66",level:3},{value:"Day 67",id:"day-67",level:3},{value:"Day 68",id:"day-68",level:3},{value:"Day 69",id:"day-69",level:3},{value:"Day 70",id:"day-70",level:3},{value:"Day 71",id:"day-71",level:3},{value:"Day 72",id:"day-72",level:3},{value:"Day 73",id:"day-73",level:3},{value:"Day 74",id:"day-74",level:3},{value:"Day 75",id:"day-75",level:3},{value:"Day 76",id:"day-76",level:3},{value:"Day 77",id:"day-77",level:3},{value:"Day 78",id:"day-78",level:3},{value:"Day 79",id:"day-79",level:3},{value:"Day 80",id:"day-80",level:3},{value:"Day 81",id:"day-81",level:3},{value:"Day 82",id:"day-82",level:3},{value:"Day 83",id:"day-83",level:3},{value:"Day 84",id:"day-84",level:3},{value:"Day 85",id:"day-85",level:3},{value:"Day 86",id:"day-86",level:3},{value:"Day 87",id:"day-87",level:3},{value:"Day 88",id:"day-88",level:3},{value:"Day 89",id:"day-89",level:3},{value:"Day 90",id:"day-90",level:3},{value:"Day 91",id:"day-91",level:3},{value:"Day 92",id:"day-92",level:3},{value:"Day 93",id:"day-93",level:3},{value:"Day 94",id:"day-94",level:3},{value:"Day 95",id:"day-95",level:3},{value:"Day 96",id:"day-96",level:3},{value:"Day 97",id:"day-97",level:3},{value:"Day 98",id:"day-98",level:3},{value:"Day 99",id:"day-99",level:3},{value:"Day 100",id:"day-100",level:3},{value:"Day 101",id:"day-101",level:3},{value:"Day 102",id:"day-102",level:3},{value:"Day 103",id:"day-103",level:3},{value:"Day 104",id:"day-104",level:3},{value:"Day 105",id:"day-105",level:3},{value:"Day 106",id:"day-106",level:3},{value:"Day 107",id:"day-107",level:3},{value:"Day 108",id:"day-108",level:3},{value:"Day 109",id:"day-109",level:3},{value:"Day 110",id:"day-110",level:3},{value:"Day 111",id:"day-111",level:3},{value:"Day 112",id:"day-112",level:3},{value:"Day 113",id:"day-113",level:3},{value:"Day 114",id:"day-114",level:3},{value:"Day 115",id:"day-115",level:3},{value:"Day 116",id:"day-116",level:3},{value:"Day 117",id:"day-117",level:3},{value:"Day 118",id:"day-118",level:3},{value:"Day 119",id:"day-119",level:3},{value:"Day 120",id:"day-120",level:3},{value:"Day 121",id:"day-121",level:3},{value:"Day 121",id:"day-121-1",level:3},{value:"Day 122",id:"day-122",level:3},{value:"Day 123",id:"day-123",level:3},{value:"Day 124",id:"day-124",level:3},{value:"Day 124",id:"day-124-1",level:3},{value:"Day 125",id:"day-125",level:3},{value:"Day 126",id:"day-126",level:3},{value:"Day 127",id:"day-127",level:3},{value:"Day 127",id:"day-127-1",level:3},{value:"Day 128",id:"day-128",level:3},{value:"Day 129",id:"day-129",level:3},{value:"Day 130",id:"day-130",level:3},{value:"Day 130",id:"day-130-1",level:3},{value:"Day 131",id:"day-131",level:3},{value:"Day 132",id:"day-132",level:3},{value:"Day 133",id:"day-133",level:3},{value:"Day 133",id:"day-133-1",level:3},{value:"Day 133",id:"day-133-2",level:3},{value:"Day 134",id:"day-134",level:3},{value:"Day 135",id:"day-135",level:3},{value:"Day 136 - 150",id:"day-136---150",level:3}];function h(e){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"150-day-roadmap",children:"150-Day Roadmap"})}),"\n",(0,l.jsx)(n.p,{children:"This document outlines a 150-day plan to prepare for MAANG interviews."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Tips for using this roadmap:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Coding questions are from LeetCode and in order (Easy, Medium, Hard)."}),"\n",(0,l.jsx)(n.li,{children:"Choose days and questions based on your time and availability."}),"\n",(0,l.jsx)(n.li,{children:"Every 6 days have coding questions."}),"\n",(0,l.jsx)(n.li,{children:"Every 7th day, have one system design and one low-level design question."}),"\n",(0,l.jsx)(n.li,{children:"Every 15th day is a revision day for things practiced in the previous 14 days."}),"\n",(0,l.jsx)(n.li,{children:"The last section, starting from the 120th day, also has behavioral interview questions."}),"\n",(0,l.jsx)(n.li,{children:"If you miss any question on a particular day, just carry it over to the next day."}),"\n",(0,l.jsx)(n.li,{children:"The idea is to be consistent for 150 days and not to solve all questions in a hurry."}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"day-wise-breakdown",children:"Day-wise Breakdown"}),"\n",(0,l.jsx)(n.h3,{id:"day-1",children:"DAY 1"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/leetcode/Easy/Two%20Sum",children:"1 - Two Sum"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/leetcode/Easy/Best%20Time%20to%20Buy%20and%20Sell%20Stock",children:"121 - Best Time to Buy and Sell Stock"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/leetcode/Easy/Majority%20Element",children:"169 - Majority Element"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/leetcode/Easy/Move%20Zeroes",children:"283 - Move Zeroes"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/leetcode/Easy/Squares%20of%20a%20Sorted%20Array",children:"977 - Squares of a Sorted Array"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/leetcode/Easy/Merge%20Sorted%20Array",children:"88 - Merge Sorted Array"})}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-2",children:"DAY 2"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/leetcode/Easy/Remove%20Duplicates%20from%20Sorted%20Array",children:"26 - Remove Duplicates from Sorted Array"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/leetcode/Medium/Remove%20Duplicates%20from%20Sorted%20Array%20II",children:"80 - Remove Duplicates from Sorted Array II"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/leetcode/Easy/Find%20All%20Numbers%20Disappeared%20in%20an%20Array",children:"448 - Find All Numbers Disappeared in an Array"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/leetcode/Easy/Intersection%20of%20Two%20Arrays",children:"349 - Intersection of Two Arrays"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/leetcode/Easy/Intersection%20of%20Two%20Arrays%20II",children:"350 - Intersection of Two Arrays II"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/leetcode/Easy/Maximum%20Population%20Year",children:"1854 - Maximum Population Year"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/leetcode/Easy/Find%20Pivot%20Index",children:"724 - Find Pivot Index"})}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-3",children:"DAY 3"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Running Sum of 1d Array]([LeetCode URL for Running Sum of 1d Array])"}),"\n",(0,l.jsx)(n.li,{children:"[Remove Element]([LeetCode URL for Remove Element])"}),"\n",(0,l.jsx)(n.li,{children:"[Find Winner on a Tic Tac Toe Game]([LeetCode URL for Find Winner on a Tic Tac Toe Game])"}),"\n",(0,l.jsx)(n.li,{children:"[Build Array from Permutation]([LeetCode URL for Build Array from Permutation])"}),"\n",(0,l.jsx)(n.li,{children:"[Third Maximum Number]([LeetCode URL for Third Maximum Number])"}),"\n",(0,l.jsx)(n.li,{children:"[Valid Mountain Array]([LeetCode URL for Valid Mountain Array])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-4",children:"DAY 4"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Find Common Characters]([LeetCode URL for Find Common Characters])"}),"\n",(0,l.jsx)(n.li,{children:"[Sum of All Odd Length Subarrays]([LeetCode URL for Sum of All Odd Length Subarrays])"}),"\n",(0,l.jsx)(n.li,{children:"[Range Sum Query - Immutable]([LeetCode URL for Range Sum Query - Immutable])"}),"\n",(0,l.jsx)(n.li,{children:"[Shuffle the Array]([LeetCode URL for Shuffle the Array])"}),"\n",(0,l.jsx)(n.li,{children:"[Max Consecutive Ones]([LeetCode URL for Max Consecutive Ones])"}),"\n",(0,l.jsx)(n.li,{children:"[Sort Array By Parity]([LeetCode URL for Sort Array By Parity])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-5",children:"DAY 5"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Reverse Linked List]([LeetCode URL for Reverse Linked List])"}),"\n",(0,l.jsx)(n.li,{children:"[Remove Linked List Elements]([LeetCode URL for Remove Linked List Elements])"}),"\n",(0,l.jsx)(n.li,{children:"[Remove Duplicates from Sorted List]([LeetCode URL for Remove Duplicates from Sorted List])"}),"\n",(0,l.jsx)(n.li,{children:"[Merge Two Sorted Lists]([LeetCode URL for Merge Two Sorted Lists])"}),"\n",(0,l.jsx)(n.li,{children:"[Middle of the Linked List]([LeetCode URL for Middle of the Linked List])"}),"\n",(0,l.jsx)(n.li,{children:"[Palindrome Linked List]([LeetCode URL for Palindrome Linked List])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-6",children:"DAY 6"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Intersection of Two Linked Lists]([LeetCode URL for Intersection of Two Linked Lists])"}),"\n",(0,l.jsx)(n.li,{children:"[Linked List Cycle]([LeetCode URL for Linked List Cycle])"}),"\n",(0,l.jsx)(n.li,{children:"[Valid Parentheses]([LeetCode URL for Valid Parentheses])"}),"\n",(0,l.jsx)(n.li,{children:"[Implement Queue using Stacks]([LeetCode URL for Implement Queue using Stacks])"}),"\n",(0,l.jsx)(n.li,{children:"[Backspace String Compare]([LeetCode URL for Backspace String Compare])"}),"\n",(0,l.jsx)(n.li,{children:"[Next Greater Element I]([LeetCode URL for Next Greater Element I])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-7",children:"DAY 7"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Design a Rate Limiter (System Design)"}),"\n",(0,l.jsx)(n.li,{children:"Design a Library Management System (OOD Design)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-8",children:"DAY 8"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Binary Tree Preorder Traversal]([LeetCode URL for Binary Tree Preorder Traversal])"}),"\n",(0,l.jsx)(n.li,{children:"[Binary Tree Inorder Traversal]([LeetCode URL for Binary Tree Inorder Traversal])"}),"\n",(0,l.jsx)(n.li,{children:"[Binary Tree Postorder Traversal]([LeetCode URL for Binary Tree Postorder Traversal])"}),"\n",(0,l.jsx)(n.li,{children:"[Maximum Depth of Binary Tree]([LeetCode URL for Maximum Depth of Binary Tree])"}),"\n",(0,l.jsx)(n.li,{children:"[Invert Binary Tree]([LeetCode URL for Invert Binary Tree])"}),"\n",(0,l.jsx)(n.li,{children:"[Symmetric Tree]([LeetCode URL for Symmetric Tree])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-9",children:"DAY 9"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Subtree of Another Tree]([LeetCode URL for Subtree of Another Tree])"}),"\n",(0,l.jsx)(n.li,{children:"[Diameter of Binary Tree]([LeetCode URL for Diameter of Binary Tree])"}),"\n",(0,l.jsx)(n.li,{children:"[Balanced Binary Tree]([LeetCode URL for Balanced Binary Tree])"}),"\n",(0,l.jsx)(n.li,{children:"[Merge Two Binary Trees]([LeetCode URL for Merge Two Binary Trees])"}),"\n",(0,l.jsx)(n.li,{children:"[Same Tree]([LeetCode URL for Same Tree])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-10",children:"DAY 10"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Path Sum]([LeetCode URL for Path Sum])"}),"\n",(0,l.jsx)(n.li,{children:"[Binary Tree Paths]([LeetCode URL for Binary Tree Paths])"}),"\n",(0,l.jsx)(n.li,{children:"[Cousins in Binary Tree]([LeetCode URL for Cousins in Binary Tree])"}),"\n",(0,l.jsx)(n.li,{children:"[Convert Sorted Array to Binary Search Tree]([LeetCode URL for Convert Sorted Array to Binary Search Tree])"}),"\n",(0,l.jsx)(n.li,{children:"[Range Sum of BST]([LeetCode URL for Range Sum of BST])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-11",children:"DAY 11"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Valid Palindrome]([LeetCode URL for Valid Palindrome])"}),"\n",(0,l.jsx)(n.li,{children:"[Valid Palindrome II]([LeetCode URL for Valid Palindrome II])"}),"\n",(0,l.jsx)(n.li,{children:"[Longest Palindrome]([LeetCode URL for Longest Palindrome])"}),"\n",(0,l.jsx)(n.li,{children:"[Longest Common Prefix]([LeetCode URL for Longest Common Prefix])"}),"\n",(0,l.jsx)(n.li,{children:"[Valid Anagram]([LeetCode URL for Valid Anagram])"}),"\n",(0,l.jsx)(n.li,{children:"[First Unique Character in a String]([LeetCode URL for First Unique Character in a String])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-12",children:"DAY 12"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Is Subsequence]([LeetCode URL for Is Subsequence])"}),"\n",(0,l.jsx)(n.li,{children:"[Reverse String]([LeetCode URL for Reverse String])"}),"\n",(0,l.jsx)(n.li,{children:"[Reverse String II]([LeetCode URL for Reverse String II])"}),"\n",(0,l.jsx)(n.li,{children:"[Reverse Words in a String III]([LeetCode URL for Reverse Words in a String III])"}),"\n",(0,l.jsx)(n.li,{children:"[Isomorphic Strings]([LeetCode URL for Isomorphic Strings])"}),"\n",(0,l.jsx)(n.li,{children:"[Remove All Adjacent Duplicates In String]([LeetCode URL for Remove All Adjacent Duplicates In String])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-13",children:"DAY 13"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Defanging an IP Address]([LeetCode URL for Defanging an IP Address])"}),"\n",(0,l.jsx)(n.li,{children:"[Reverse Only Letters]([LeetCode URL for Reverse Only Letters])"}),"\n",(0,l.jsx)(n.li,{children:"[Reverse Vowels of a String]([LeetCode URL for Reverse Vowels of a String])"}),"\n",(0,l.jsx)(n.li,{children:"[Length of Last Word]([LeetCode URL for Length of Last Word])"}),"\n",(0,l.jsx)(n.li,{children:"[Add Strings]([LeetCode URL for Add Strings])"}),"\n",(0,l.jsx)(n.li,{children:"[Fizz Buzz]([LeetCode URL for Fizz Buzz])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-14",children:"DAY 14"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Design Consistent Hashing (System Design)"}),"\n",(0,l.jsx)(n.li,{children:"Design a Parking Lot (OOD Design)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-15",children:"DAY 15"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Revise the questions solved from day 1 to 14."}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-16",children:"DAY 16"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Roman to Integer]([LeetCode URL for Roman to Integer])"}),"\n",(0,l.jsx)(n.li,{children:"[Palindrome Number]([LeetCode URL for Palindrome Number])"}),"\n",(0,l.jsx)(n.li,{children:"[Happy Number]([LeetCode URL for Happy Number])"}),"\n",(0,l.jsx)(n.li,{children:"[Power of Two]([LeetCode URL for Power of Two])"}),"\n",(0,l.jsx)(n.li,{children:"[Sqrt(x)]([LeetCode URL for Sqrt(x)])"}),"\n",(0,l.jsx)(n.li,{children:"[Plus One]([LeetCode URL for Plus One])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-17",children:"DAY 17"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Count Odd Numbers in an Interval Range]([LeetCode URL for Count Odd Numbers in an Interval Range])"}),"\n",(0,l.jsx)(n.li,{children:"[Rectangle Overlap]([LeetCode URL for Rectangle Overlap])"}),"\n",(0,l.jsx)(n.li,{children:"[Add Digits]([LeetCode URL for Add Digits])"}),"\n",(0,l.jsx)(n.li,{children:"[Maximum Product of Three Numbers]([LeetCode URL for Maximum Product of Three Numbers])"}),"\n",(0,l.jsx)(n.li,{children:"[Excel Sheet Column Number]([LeetCode URL for Excel Sheet Column Number])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-18",children:"DAY 18"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Add Binary]([LeetCode URL for Add Binary])"}),"\n",(0,l.jsx)(n.li,{children:"[Counting Bits]([LeetCode URL for Counting Bits])"}),"\n",(0,l.jsx)(n.li,{children:"[Number of 1 Bits]([LeetCode URL for Number of 1 Bits])"}),"\n",(0,l.jsx)(n.li,{children:"[Single Number]([LeetCode URL for Single Number])"}),"\n",(0,l.jsx)(n.li,{children:"[Missing Number]([LeetCode URL for Missing Number])"}),"\n",(0,l.jsx)(n.li,{children:"[Reverse Bits]([LeetCode URL for Reverse Bits])"}),"\n",(0,l.jsx)(n.li,{children:"[Hamming Distance]([LeetCode URL for Hamming Distance])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-19",children:"DAY 19"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Binary Search]([LeetCode URL for Binary Search])"}),"\n",(0,l.jsx)(n.li,{children:"[Search Insert Position]([LeetCode URL for Search Insert Position])"}),"\n",(0,l.jsx)(n.li,{children:"[First Bad Version]([LeetCode URL for First Bad Version])"}),"\n",(0,l.jsx)(n.li,{children:"[Valid Perfect Square]([LeetCode URL for Valid Perfect Square])"}),"\n",(0,l.jsx)(n.li,{children:"[Kth Missing Positive Number]([LeetCode URL for Kth Missing Positive Number])"}),"\n",(0,l.jsx)(n.li,{children:"[Kth Largest Element in a Stream]([LeetCode URL for Kth Largest Element in a Stream])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-20",children:"DAY 20"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Design HashMap]([LeetCode URL for Design HashMap])"}),"\n",(0,l.jsx)(n.li,{children:"[Ransom Note]([LeetCode URL for Ransom Note])"}),"\n",(0,l.jsx)(n.li,{children:"[Contains Duplicate]([LeetCode URL for Contains Duplicate])"}),"\n",(0,l.jsx)(n.li,{children:"[Contains Duplicate II]([LeetCode URL for Contains Duplicate II])"}),"\n",(0,l.jsx)(n.li,{children:"[Jewels and Stones]([LeetCode URL for Jewels and Stones])"}),"\n",(0,l.jsx)(n.li,{children:"[Unique Number of Occurrences]([LeetCode URL for Unique Number of Occurrences])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-21",children:"DAY 21"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Word Pattern]([LeetCode URL for Word Pattern])"}),"\n",(0,l.jsx)(n.li,{children:"[Number of Good Pairs]([LeetCode URL for Number of Good Pairs])"}),"\n",(0,l.jsx)(n.li,{children:"[Flood Fill]([LeetCode URL for Flood Fill])"}),"\n",(0,l.jsx)(n.li,{children:"[Island Perimeter]([LeetCode URL for Island Perimeter])"}),"\n",(0,l.jsx)(n.li,{children:"[Find if Path Exists in Graph]([LeetCode URL for Find if Path Exists in Graph])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-22",children:"DAY 22"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Design A Key-value Store (System Design)"}),"\n",(0,l.jsx)(n.li,{children:"Design Amazon - Online Shopping System (OOD Design)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-23",children:"DAY 23"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Fibonacci Number]([LeetCode URL for Fibonacci Number])"}),"\n",(0,l.jsx)(n.li,{children:"[Min Cost Climbing Stairs]([LeetCode URL for Min Cost Climbing Stairs])"}),"\n",(0,l.jsx)(n.li,{children:"[Climbing Stairs]([LeetCode URL for Climbing Stairs])"}),"\n",(0,l.jsx)(n.li,{children:"[Pascal's Triangle]([LeetCode URL for Pascal's Triangle])"}),"\n",(0,l.jsx)(n.li,{children:"[Can Place Flowers]([LeetCode URL for Can Place Flowers])"}),"\n",(0,l.jsx)(n.li,{children:"[Maximum Units on a Truck]([LeetCode URL for Maximum Units on a Truck])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-24",children:"DAY 24"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[3Sum]([LeetCode URL for 3Sum])"}),"\n",(0,l.jsx)(n.li,{children:"[3Sum Closest]([LeetCode URL for 3Sum Closest])"}),"\n",(0,l.jsx)(n.li,{children:"[Non-decreasing Array]([LeetCode URL for Non-decreasing Array])"}),"\n",(0,l.jsx)(n.li,{children:"[Product of Array Except Self]([LeetCode URL for Product of Array Except Self])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-25",children:"DAY 25"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Merge Intervals]([LeetCode URL for Merge Intervals])"}),"\n",(0,l.jsx)(n.li,{children:"[Insert Interval]([LeetCode URL for Insert Interval])"}),"\n",(0,l.jsx)(n.li,{children:"[Non-overlapping Intervals]([LeetCode URL for Non-overlapping Intervals])"}),"\n",(0,l.jsx)(n.li,{children:"[Interval List Intersections]([LeetCode URL for Interval List Intersections])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-26",children:"DAY 26"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Container With Most Water]([LeetCode URL for Container With Most Water])"}),"\n",(0,l.jsx)(n.li,{children:"[Sort Colors]([LeetCode URL for Sort Colors])"}),"\n",(0,l.jsx)(n.li,{children:"[Rotate Array]([LeetCode URL for Rotate Array])"}),"\n",(0,l.jsx)(n.li,{children:"[Contiguous Array]([LeetCode URL for Contiguous Array])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-27",children:"DAY 27"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Subarray Sum Equals K]([LeetCode URL for Subarray Sum Equals K])"}),"\n",(0,l.jsx)(n.li,{children:"[Shortest Unsorted Continuous Subarray]([LeetCode URL for Shortest Unsorted Continuous Subarray])"}),"\n",(0,l.jsx)(n.li,{children:"[Maximum Points You Can Obtain from Cards]([LeetCode URL for Maximum Points You Can Obtain from Cards])"}),"\n",(0,l.jsx)(n.li,{children:"[Max Consecutive Ones III]([LeetCode URL for Max Consecutive Ones III])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-28",children:"DAY 28"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Permutation in String]([LeetCode URL for Permutation in String])"}),"\n",(0,l.jsx)(n.li,{children:"[Wiggle Sort II]([LeetCode URL for Wiggle Sort II])"}),"\n",(0,l.jsx)(n.li,{children:"[Max Chunks To Make Sorted]([LeetCode URL for Max Chunks To Make Sorted])"}),"\n",(0,l.jsx)(n.li,{children:"[H-Index]([LeetCode URL for H-Index])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-29",children:"DAY 29"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Design A Distributed Unique ID Generator (System Design)"}),"\n",(0,l.jsx)(n.li,{children:"Design Stack Overflow (OOD Design)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-30",children:"DAY 30"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Revise the questions solved from day 15 to 29."}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-31",children:"DAY 31"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Remove Nth Node From End of List]([LeetCode URL for Remove Nth Node From End of List])"}),"\n",(0,l.jsx)(n.li,{children:"[Delete Node in a Linked List]([LeetCode URL for Delete Node in a Linked List])"}),"\n",(0,l.jsx)(n.li,{children:"[Remove Duplicates from Sorted List II]([LeetCode URL for Remove Duplicates from Sorted List II])"}),"\n",(0,l.jsx)(n.li,{children:"[Next Greater Node In Linked List]([LeetCode URL for Next Greater Node In Linked List])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-32",children:"Day 32"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Add Two Numbers]([LeetCode URL for Add Two Numbers])"}),"\n",(0,l.jsx)(n.li,{children:"[Add Two Numbers II]([LeetCode URL for Add Two Numbers II])"}),"\n",(0,l.jsx)(n.li,{children:"[Copy List with Random Pointer]([LeetCode URL for Copy List with Random Pointer])"}),"\n",(0,l.jsx)(n.li,{children:"[Reverse Linked List II]([LeetCode URL for Reverse Linked List II])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-33",children:"Day 33"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Swap Nodes in Pairs]([LeetCode URL for Swap Nodes in Pairs])"}),"\n",(0,l.jsx)(n.li,{children:"[Odd Even Linked List]([LeetCode URL for Odd Even Linked List])"}),"\n",(0,l.jsx)(n.li,{children:"[Partition List]([LeetCode URL for Partition List])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-34",children:"Day 34"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Sort List]([LeetCode URL for Sort List])"}),"\n",(0,l.jsx)(n.li,{children:"[Reorder List]([LeetCode URL for Reorder List])"}),"\n",(0,l.jsx)(n.li,{children:"[Rotate List]([LeetCode URL for Rotate List])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-35",children:"Day 35"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Evaluate Reverse Polish Notation]([LeetCode URL for Evaluate Reverse Polish Notation])"}),"\n",(0,l.jsx)(n.li,{children:"[Min Stack]([LeetCode URL for Min Stack])"}),"\n",(0,l.jsx)(n.li,{children:"[Daily Temperatures]([LeetCode URL for Daily Temperatures])"}),"\n",(0,l.jsx)(n.li,{children:"[Decode String]([LeetCode URL for Decode String])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-36",children:"Day 36"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Next Greater Element II]([LeetCode URL for Next Greater Element II])"}),"\n",(0,l.jsx)(n.li,{children:"[Next Greater Element III]([LeetCode URL for Next Greater Element III])"}),"\n",(0,l.jsx)(n.li,{children:"[Minimum Remove to Make Valid Parentheses]([LeetCode URL for Minimum Remove to Make Valid Parentheses])"}),"\n",(0,l.jsx)(n.li,{children:"[132 Pattern]([LeetCode URL for 132 Pattern])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-37",children:"Day 37"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Design A URL Shortener (System Design)"}),"\n",(0,l.jsx)(n.li,{children:"Design a Movie Ticket Booking System (OOD Design)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-38",children:"Day 38"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Asteroid Collision]([LeetCode URL for Asteroid Collision])"}),"\n",(0,l.jsx)(n.li,{children:"[Basic Calculator II]([LeetCode URL for Basic Calculator II])"}),"\n",(0,l.jsx)(n.li,{children:"[Remove K Digits]([LeetCode URL for Remove K Digits])"}),"\n",(0,l.jsx)(n.li,{children:"[Remove Duplicate Letters]([LeetCode URL for Remove Duplicate Letters])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-39",children:"Day 39"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Remove All Adjacent Duplicates in String II]([LeetCode URL for Remove All Adjacent Duplicates in String II])"}),"\n",(0,l.jsx)(n.li,{children:"[Flatten Nested List Iterator]([LeetCode URL for Flatten Nested List Iterator])"}),"\n",(0,l.jsx)(n.li,{children:"[Simplify Path]([LeetCode URL for Simplify Path])"}),"\n",(0,l.jsx)(n.li,{children:"[Longest Absolute File Path]([LeetCode URL for Longest Absolute File Path])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-40",children:"Day 40"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Open the Lock]([LeetCode URL for Open the Lock])"}),"\n",(0,l.jsx)(n.li,{children:"[Shortest Bridge]([LeetCode URL for Shortest Bridge])"}),"\n",(0,l.jsx)(n.li,{children:"[LRU Cache]([LeetCode URL for LRU Cache])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-41",children:"Day 41"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Longest Substring Without Repeating Characters]([LeetCode URL for Longest Substring Without Repeating Characters])"}),"\n",(0,l.jsx)(n.li,{children:"[String to Integer (atoi)]([LeetCode URL for String to Integer (atoi)])"}),"\n",(0,l.jsx)(n.li,{children:"[Find All Anagrams in a String]([LeetCode URL for Find All Anagrams in a String])"}),"\n",(0,l.jsx)(n.li,{children:"[Group Anagrams]([LeetCode URL for Group Anagrams])"}),"\n",(0,l.jsx)(n.li,{children:"[Pancake Sorting]([LeetCode URL for Pancake Sorting])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-42",children:"Day 42"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Longest Repeating Character Replacement]([LeetCode URL for Longest Repeating Character Replacement])"}),"\n",(0,l.jsx)(n.li,{children:"[Largest Number]([LeetCode URL for Largest Number])"}),"\n",(0,l.jsx)(n.li,{children:"[Number of Matching Subsequences]([LeetCode URL for Number of Matching Subsequences])"}),"\n",(0,l.jsx)(n.li,{children:"[Find the Index of the First Occurrence in a String]([LeetCode URL for Find the Index of the First Occurrence in a String])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-43",children:"Day 43"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Longest Substring with At Least K Repeating Characters]([LeetCode URL for Longest Substring with At Least K Repeating Characters])"}),"\n",(0,l.jsx)(n.li,{children:"[Zigzag Conversion]([LeetCode URL for Zigzag Conversion])"}),"\n",(0,l.jsx)(n.li,{children:"[Reverse Words in a String]([LeetCode URL for Reverse Words in a String])"}),"\n",(0,l.jsx)(n.li,{children:"[String Compression]([LeetCode URL for String Compression])"}),"\n",(0,l.jsx)(n.li,{children:"[Count and Say]([LeetCode URL for Count and Say])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-44",children:"Day 44"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Design Pastebin (System Design)"}),"\n",(0,l.jsx)(n.li,{children:"Design an ATM (OOD Design)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-45",children:"Day 45"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Revise the questions solved from day 30 to 44."}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-46",children:"Day 46"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Binary Tree Level Order Traversal]([LeetCode URL for Binary Tree Level Order Traversal])"}),"\n",(0,l.jsx)(n.li,{children:"[Binary Tree Zigzag Level Order Traversal]([LeetCode URL for Binary Tree Zigzag Level Order Traversal])"}),"\n",(0,l.jsx)(n.li,{children:"[Construct Binary Tree from Preorder and Inorder Traversal]([LeetCode URL for Construct Binary Tree from Preorder and Inorder Traversal])"}),"\n",(0,l.jsx)(n.li,{children:"[Lowest Common Ancestor of a Binary Tree]([LeetCode URL for Lowest Common Ancestor of a Binary Tree])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-47",children:"Day 47"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Binary Tree Right Side View]([LeetCode URL for Binary Tree Right Side View])"}),"\n",(0,l.jsx)(n.li,{children:"[Populating Next Right Pointers in Each Node]([LeetCode URL for Populating Next Right Pointers in Each Node])"}),"\n",(0,l.jsx)(n.li,{children:"[Populating Next Right Pointers in Each Node II]([LeetCode URL for Populating Next Right Pointers in Each Node II])"}),"\n",(0,l.jsx)(n.li,{children:"[Maximum Width of Binary Tree]([LeetCode URL for Maximum Width of Binary Tree])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-48",children:"Day 48"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Path Sum II]([LeetCode URL for Path Sum II])"}),"\n",(0,l.jsx)(n.li,{children:"[Path Sum III]([LeetCode URL for Path Sum III])"}),"\n",(0,l.jsx)(n.li,{children:"[All Nodes Distance K in Binary Tree]([LeetCode URL for All Nodes Distance K in Binary Tree])"}),"\n",(0,l.jsx)(n.li,{children:"[Flatten Binary Tree to Linked List]([LeetCode URL for Flatten Binary Tree to Linked List])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-49",children:"Day 49"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Count Complete Tree Nodes]([LeetCode URL for Count Complete Tree Nodes])"}),"\n",(0,l.jsx)(n.li,{children:"[Sum Root to Leaf Numbers]([LeetCode URL for Sum Root to Leaf Numbers])"}),"\n",(0,l.jsx)(n.li,{children:"[Find Bottom Left Tree Value]([LeetCode URL for Find Bottom Left Tree Value])"}),"\n",(0,l.jsx)(n.li,{children:"[Distribute Coins in Binary Tree]([LeetCode URL for Distribute Coins in Binary Tree])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-50",children:"Day 50"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Delete Node in a BST]([LeetCode URL for Delete Node in a BST])"}),"\n",(0,l.jsx)(n.li,{children:"[Validate Binary Search Tree]([LeetCode URL for Validate Binary Search Tree])"}),"\n",(0,l.jsx)(n.li,{children:"[Kth Smallest Element in a BST]([LeetCode URL for Kth Smallest Element in a BST])"}),"\n",(0,l.jsx)(n.li,{children:"[Lowest Common Ancestor of a Binary Search Tree]([LeetCode URL for Lowest Common Ancestor of a Binary Search Tree])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-51",children:"Day 51"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Convert Sorted List to Binary Search Tree]([LeetCode URL for Convert Sorted List to Binary Search Tree])"}),"\n",(0,l.jsx)(n.li,{children:"[Construct Binary Search Tree from Preorder Traversal]([LeetCode URL for Construct Binary Search Tree from Preorder Traversal])"}),"\n",(0,l.jsx)(n.li,{children:"[Binary Search Tree Iterator]([LeetCode URL for Binary Search Tree Iterator])"}),"\n",(0,l.jsx)(n.li,{children:"[Recover Binary Search Tree]([LeetCode URL for Recover Binary Search Tree])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-52",children:"Day 52"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Design Instagram (System Design)"}),"\n",(0,l.jsx)(n.li,{children:"Design an Airline Management System (OOD Design)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-53",children:"Day 53"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Binary Tree Maximum Path Sum]([LeetCode URL for Binary Tree Maximum Path Sum])"}),"\n",(0,l.jsx)(n.li,{children:"[Step-By-Step Directions From a Binary Tree Node to Another]([LeetCode URL for Step-By-Step Directions From a Binary Tree Node to Another])"}),"\n",(0,l.jsx)(n.li,{children:"[Maximum Level Sum of a Binary Tree]([LeetCode URL for Maximum Level Sum of a Binary Tree])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-54",children:"Day 54"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Trim a Binary Search Tree]([LeetCode URL for Trim a Binary Search Tree])"}),"\n",(0,l.jsx)(n.li,{children:"[Balance a Binary Search Tree]([LeetCode URL for Balance a Binary Search Tree])"}),"\n",(0,l.jsx)(n.li,{children:"[Serialize and Deserialize Binary Tree]([LeetCode URL for Serialize and Deserialize Binary Tree])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-55",children:"Day 55"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Search in Rotated Sorted Array]([LeetCode URL for Search in Rotated Sorted Array])"}),"\n",(0,l.jsx)(n.li,{children:"[Search in Rotated Sorted Array II]([LeetCode URL for Search in Rotated Sorted Array II])"}),"\n",(0,l.jsx)(n.li,{children:"[Time Based Key-Value Store]([LeetCode URL for Time Based Key-Value Store])"}),"\n",(0,l.jsx)(n.li,{children:"[Find Minimum in Rotated Sorted Array]([LeetCode URL for Find Minimum in Rotated Sorted Array])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-56",children:"Day 56"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Find First and Last Position of Element in Sorted Array]([LeetCode URL for Find First and Last Position of Element in Sorted Array])"}),"\n",(0,l.jsx)(n.li,{children:"[Find the Duplicate Number]([LeetCode URL for Find the Duplicate Number])"}),"\n",(0,l.jsx)(n.li,{children:"[Minimum Size Subarray Sum]([LeetCode URL for Minimum Size Subarray Sum])"}),"\n",(0,l.jsx)(n.li,{children:"[Single Element in a Sorted Array]([LeetCode URL for Single Element in a Sorted Array])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-57",children:"Day 57"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Find Peak Element]([LeetCode URL for Find Peak Element])"}),"\n",(0,l.jsx)(n.li,{children:"[Capacity To Ship Packages Within D Days]([LeetCode URL for Capacity To Ship Packages Within D Days])"}),"\n",(0,l.jsx)(n.li,{children:"[Koko Eating Bananas]([LeetCode URL for Koko Eating Bananas])"}),"\n",(0,l.jsx)(n.li,{children:"[Peak Index in a Mountain Array]([LeetCode URL for Peak Index in a Mountain Array])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-58",children:"Day 58"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Search a 2D Matrix]([LeetCode URL for Search a 2D Matrix])"}),"\n",(0,l.jsx)(n.li,{children:"[Search a 2D Matrix II]([LeetCode URL for Search a 2D Matrix II])"}),"\n",(0,l.jsx)(n.li,{children:"[Spiral Matrix]([LeetCode URL for Spiral Matrix])"}),"\n",(0,l.jsx)(n.li,{children:"[Spiral Matrix II]([LeetCode URL for Spiral Matrix II])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-59",children:"Day 59"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Design A Web Crawler (System Design)"}),"\n",(0,l.jsx)(n.li,{children:"Design Blackjack and a Deck of Cards (OOD Design)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-60",children:"Day 60"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Revise the questions solved from day 46 to 59."}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-61",children:"Day 61"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Valid Sudoku]([LeetCode URL for Valid Sudoku])"}),"\n",(0,l.jsx)(n.li,{children:"[Rotate Image]([LeetCode URL for Rotate Image])"}),"\n",(0,l.jsx)(n.li,{children:"[Set Matrix Zeroes]([LeetCode URL for Set Matrix Zeroes])"}),"\n",(0,l.jsx)(n.li,{children:"[Game of Life]([LeetCode URL for Game of Life])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-62",children:"Day 62"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Diagonal Traverse]([LeetCode URL for Diagonal Traverse])"}),"\n",(0,l.jsx)(n.li,{children:"[Matrix Block Sum]([LeetCode URL for Matrix Block Sum])"}),"\n",(0,l.jsx)(n.li,{children:"[Battleships in a Board]([LeetCode URL for Battleships in a Board])"}),"\n",(0,l.jsx)(n.li,{children:"[Snapshot Array]([LeetCode URL for Snapshot Array])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-63",children:"Day 63"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Number of Islands]([LeetCode URL for Number of Islands])"}),"\n",(0,l.jsx)(n.li,{children:"[01 Matrix]([LeetCode URL for 01 Matrix])"}),"\n",(0,l.jsx)(n.li,{children:"[Clone Graph]([LeetCode URL for Clone Graph])"}),"\n",(0,l.jsx)(n.li,{children:"[Rotting Oranges]([LeetCode URL for Rotting Oranges])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-64",children:"Day 64"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Course Schedule]([LeetCode URL for Course Schedule])"}),"\n",(0,l.jsx)(n.li,{children:"[Course Schedule II]([LeetCode URL for Course Schedule II])"}),"\n",(0,l.jsx)(n.li,{children:"[Accounts Merge]([LeetCode URL for Accounts Merge])"}),"\n",(0,l.jsx)(n.li,{children:"[Word Search]([LeetCode URL for Word Search])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-65",children:"Day 65"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Minimum Height Trees]([LeetCode URL for Minimum Height Trees])"}),"\n",(0,l.jsx)(n.li,{children:"[Pacific Atlantic Water Flow]([LeetCode URL for Pacific Atlantic Water Flow])"}),"\n",(0,l.jsx)(n.li,{children:"[Cheapest Flights Within K Stops]([LeetCode URL for Cheapest Flights Within K Stops])"}),"\n",(0,l.jsx)(n.li,{children:"[Max Area of Island]([LeetCode URL for Max Area of Island])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-66",children:"Day 66"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Evaluate Division]([LeetCode URL for Evaluate Division])"}),"\n",(0,l.jsx)(n.li,{children:"[Number of Provinces]([LeetCode URL for Number of Provinces])"}),"\n",(0,l.jsx)(n.li,{children:"[Surrounded Regions]([LeetCode URL for Surrounded Regions])"}),"\n",(0,l.jsx)(n.li,{children:"[Network Delay Time]([LeetCode URL for Network Delay Time])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-67",children:"Day 67"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Design A Notification System (System Design)"}),"\n",(0,l.jsx)(n.li,{children:"Design a Hotel Management System (OOD Design)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-68",children:"Day 68"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[All Paths From Source to Target]([LeetCode URL for All Paths From Source to Target])"}),"\n",(0,l.jsx)(n.li,{children:"[Redundant Connection]([LeetCode URL for Redundant Connection])"}),"\n",(0,l.jsx)(n.li,{children:"[Shortest Path in Binary Matrix]([LeetCode URL for Shortest Path in Binary Matrix])"}),"\n",(0,l.jsx)(n.li,{children:"[Number of Operations to Make Network Connected]([LeetCode URL for Number of Operations to Make Network Connected])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-69",children:"Day 69"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Majority Element II]([LeetCode URL for Majority Element II])"}),"\n",(0,l.jsx)(n.li,{children:"[Longest Consecutive Sequence]([LeetCode URL for Longest Consecutive Sequence])"}),"\n",(0,l.jsx)(n.li,{children:"[Insert Delete GetRandom O(1)]([LeetCode URL for Insert Delete GetRandom O(1)])"}),"\n",(0,l.jsx)(n.li,{children:"[Find All Duplicates in an Array]([LeetCode URL for Find All Duplicates in an Array])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-70",children:"Day 70"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Continuous Subarray Sum]([LeetCode URL for Continuous Subarray Sum])"}),"\n",(0,l.jsx)(n.li,{children:"[Find and Replace Pattern]([LeetCode URL for Find and Replace Pattern])"}),"\n",(0,l.jsx)(n.li,{children:"[K-diff Pairs in an Array]([LeetCode URL for K-diff Pairs in an Array])"}),"\n",(0,l.jsx)(n.li,{children:"[Custom Sort String]([LeetCode URL for Custom Sort String])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-71",children:"Day 71"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Fraction to Recurring Decimal]([LeetCode URL for Fraction to Recurring Decimal])"}),"\n",(0,l.jsx)(n.li,{children:"[Fruit Into Baskets]([LeetCode URL for Fruit Into Baskets])"}),"\n",(0,l.jsx)(n.li,{children:"[Encode and Decode TinyURL]([LeetCode URL for Encode and Decode TinyURL])"}),"\n",(0,l.jsx)(n.li,{children:"[Minimum Area Rectangle]([LeetCode URL for Minimum Area Rectangle])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-72",children:"Day 72"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Maximum Subarray]([LeetCode URL for Maximum Subarray])"}),"\n",(0,l.jsx)(n.li,{children:"[Maximum Product Subarray]([LeetCode URL for Maximum Product Subarray])"}),"\n",(0,l.jsx)(n.li,{children:"[Coin Change]([LeetCode URL for Coin Change])"}),"\n",(0,l.jsx)(n.li,{children:"[Coin Change II]([LeetCode URL for Coin Change II])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-73",children:"Day 73"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Jump Game]([LeetCode URL for Jump Game])"}),"\n",(0,l.jsx)(n.li,{children:"[Jump Game II]([LeetCode URL for Jump Game II])"}),"\n",(0,l.jsx)(n.li,{children:"[Jump Game III]([LeetCode URL for Jump Game III])"}),"\n",(0,l.jsx)(n.li,{children:"[Partition Equal Subset Sum]([LeetCode URL for Partition Equal Subset Sum])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-74",children:"Day 74"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Design A News Feed System (System Design)"}),"\n",(0,l.jsx)(n.li,{children:"Design a Restaurant Management system (OOD Design)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-75",children:"Day 75"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Revise the questions solved from day 61 to 74."}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-76",children:"Day 76"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Longest Increasing Subsequence]([LeetCode URL for Longest Increasing Subsequence])"}),"\n",(0,l.jsx)(n.li,{children:"[Unique Paths]([LeetCode URL for Unique Paths])"}),"\n",(0,l.jsx)(n.li,{children:"[Unique Paths II]([LeetCode URL for Unique Paths II])"}),"\n",(0,l.jsx)(n.li,{children:"[Maximal Square]([LeetCode URL for Maximal Square])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-77",children:"Day 77"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[House Robber]([LeetCode URL for House Robber])"}),"\n",(0,l.jsx)(n.li,{children:"[House Robber II]([LeetCode URL for House Robber II])"}),"\n",(0,l.jsx)(n.li,{children:"[House Robber III]([LeetCode URL for House Robber III])"}),"\n",(0,l.jsx)(n.li,{children:"[Decode Ways]([LeetCode URL for Decode Ways])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-78",children:"Day 78"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Best Time to Buy and Sell Stock II]([LeetCode URL for Best Time to Buy and Sell Stock II])"}),"\n",(0,l.jsx)(n.li,{children:"[Minimum Path Sum]([LeetCode URL for Minimum Path Sum])"}),"\n",(0,l.jsx)(n.li,{children:"[Longest Common Subsequence]([LeetCode URL for Longest Common Subsequence])"}),"\n",(0,l.jsx)(n.li,{children:"[Palindrome Partitioning]([LeetCode URL for Palindrome Partitioning])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-79",children:"Day 79"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Unique Binary Search Trees]([LeetCode URL for Unique Binary Search Trees])"}),"\n",(0,l.jsx)(n.li,{children:"[Unique Binary Search Trees II]([LeetCode URL for Unique Binary Search Trees II])"}),"\n",(0,l.jsx)(n.li,{children:"[Target Sum]([LeetCode URL for Target Sum])"}),"\n",(0,l.jsx)(n.li,{children:"[Triangle]([LeetCode URL for Triangle])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-80",children:"Day 80"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Longest Palindromic Subsequence]([LeetCode URL for Longest Palindromic Subsequence])"}),"\n",(0,l.jsx)(n.li,{children:"[Partition to K Equal Sum Subsets]([LeetCode URL for Partition to K Equal Sum Subsets])"}),"\n",(0,l.jsx)(n.li,{children:"[Delete and Earn]([LeetCode URL for Delete and Earn])"}),"\n",(0,l.jsx)(n.li,{children:"[Palindromic Substrings]([LeetCode URL for Palindromic Substrings])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-81",children:"Day 81"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Longest String Chain]([LeetCode URL for Longest String Chain])"}),"\n",(0,l.jsx)(n.li,{children:"[Minimum Cost For Tickets]([LeetCode URL for Minimum Cost For Tickets])"}),"\n",(0,l.jsx)(n.li,{children:"[Delete Operation for Two Strings]([LeetCode URL for Delete Operation for Two Strings])"}),"\n",(0,l.jsx)(n.li,{children:"[Perfect Squares]([LeetCode URL for Perfect Squares])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-82",children:"Day 82"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Design A Chat System (System Design)"}),"\n",(0,l.jsx)(n.li,{children:"Design Chess (OOD Design)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-83",children:"Day 83"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Different Ways to Add Parentheses]([LeetCode URL for Different Ways to Add Parentheses])"}),"\n",(0,l.jsx)(n.li,{children:"[Longest Palindromic Substring]([LeetCode URL for Longest Palindromic Substring])"}),"\n",(0,l.jsx)(n.li,{children:"[Largest Divisible Subset]([LeetCode URL for Largest Divisible Subset])"}),"\n",(0,l.jsx)(n.li,{children:"[Integer Break]([LeetCode URL for Integer Break])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-84",children:"Day 84"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Matchsticks to Square]([LeetCode URL for Matchsticks to Square])"}),"\n",(0,l.jsx)(n.li,{children:"[Knight Dialer]([LeetCode URL for Knight Dialer])"}),"\n",(0,l.jsx)(n.li,{children:"[Minesweeper]([LeetCode URL for Minesweeper])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-85",children:"Day 85"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Random Pick with Weight]([LeetCode URL for Random Pick with Weight])"}),"\n",(0,l.jsx)(n.li,{children:"[Pow(x, n)]([LeetCode URL for Pow(x, n)])"}),"\n",(0,l.jsx)(n.li,{children:"[Reverse Integer]([LeetCode URL for Reverse Integer])"}),"\n",(0,l.jsx)(n.li,{children:"[Multiply Strings]([LeetCode URL for Multiply Strings])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-86",children:"Day 86"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Count Primes]([LeetCode URL for Count Primes])"}),"\n",(0,l.jsx)(n.li,{children:"[Integer to Roman]([LeetCode URL for Integer to Roman])"}),"\n",(0,l.jsx)(n.li,{children:"[Robot Bounded In Circle]([LeetCode URL for Robot Bounded In Circle])"}),"\n",(0,l.jsx)(n.li,{children:"[Angle Between Hands of a Clock]([LeetCode URL for Angle Between Hands of a Clock])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-87",children:"Day 87"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[K Closest Points to Origin]([LeetCode URL for K Closest Points to Origin])"}),"\n",(0,l.jsx)(n.li,{children:"[Task Scheduler]([LeetCode URL for Task Scheduler])"}),"\n",(0,l.jsx)(n.li,{children:"[Top K Frequent Elements]([LeetCode URL for Top K Frequent Elements])"}),"\n",(0,l.jsx)(n.li,{children:"[Find K Closest Elements]([LeetCode URL for Find K Closest Elements])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-88",children:"Day 88"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Kth Largest Element in an Array]([LeetCode URL for Kth Largest Element in an Array])"}),"\n",(0,l.jsx)(n.li,{children:"[Kth Smallest Element in a Sorted Matrix]([LeetCode URL for Kth Smallest Element in a Sorted Matrix])"}),"\n",(0,l.jsx)(n.li,{children:"[Top K Frequent Words]([LeetCode URL for Top K Frequent Words])"}),"\n",(0,l.jsx)(n.li,{children:"[Reorganize String]([LeetCode URL for Reorganize String])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-89",children:"Day 89"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Design A Search Autocomplete System (System Design)"}),"\n",(0,l.jsx)(n.li,{children:"Design an Online Stock Brokerage System (OOD Design)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-90",children:"Day 90"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Revise the questions solved from day 76 to 89."}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-91",children:"Day 91"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Sort Characters By Frequency]([LeetCode URL for Sort Characters By Frequency])"}),"\n",(0,l.jsx)(n.li,{children:"[Car Pooling]([LeetCode URL for Car Pooling])"}),"\n",(0,l.jsx)(n.li,{children:"[Find K Pairs with Smallest Sums]([LeetCode URL for Find K Pairs with Smallest Sums])"}),"\n",(0,l.jsx)(n.li,{children:"[Maximum Number of Events That Can Be Attended]([LeetCode URL for Maximum Number of Events That Can Be Attended])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-92",children:"Day 92"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Implement Trie (Prefix Tree)]([LeetCode URL for Implement Trie (Prefix Tree)])"}),"\n",(0,l.jsx)(n.li,{children:"[Word Break]([LeetCode URL for Word Break])"}),"\n",(0,l.jsx)(n.li,{children:"[Design Add and Search Words Data Structure]([LeetCode URL for Design Add and Search Words Data Structure])"}),"\n",(0,l.jsx)(n.li,{children:"[Search Suggestions System]([LeetCode URL for Search Suggestions System])"}),"\n",(0,l.jsx)(n.li,{children:"[Remove Sub-Folders from the Filesystem]([LeetCode URL for Remove Sub-Folders from the Filesystem])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-93",children:"Day 93"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Permutations]([LeetCode URL for Permutations])"}),"\n",(0,l.jsx)(n.li,{children:"[Permutations II]([LeetCode URL for Permutations II])"}),"\n",(0,l.jsx)(n.li,{children:"[Subsets]([LeetCode URL for Subsets])"}),"\n",(0,l.jsx)(n.li,{children:"[Subsets II]([LeetCode URL for Subsets II])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-94",children:"Day 94"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Next Permutation]([LeetCode URL for Next Permutation])"}),"\n",(0,l.jsx)(n.li,{children:"[Combinations]([LeetCode URL for Combinations])"}),"\n",(0,l.jsx)(n.li,{children:"[Letter Combinations of a Phone Number]([LeetCode URL for Letter Combinations of a Phone Number])"}),"\n",(0,l.jsx)(n.li,{children:"[Generate Parentheses]([LeetCode URL for Generate Parentheses])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-95",children:"Day 95"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Combination Sum]([LeetCode URL for Combination Sum])"}),"\n",(0,l.jsx)(n.li,{children:"[Combination Sum III]([LeetCode URL for Combination Sum III])"}),"\n",(0,l.jsx)(n.li,{children:"[Combination Sum IV]([LeetCode URL for Combination Sum IV])"}),"\n",(0,l.jsx)(n.li,{children:"[Restore IP Addresses]([LeetCode URL for Restore IP Addresses])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-96",children:"Day 96"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Gas Station]([LeetCode URL for Gas Station])"}),"\n",(0,l.jsx)(n.li,{children:"[Partition Labels]([LeetCode URL for Partition Labels])"}),"\n",(0,l.jsx)(n.li,{children:"[Valid Parenthesis String]([LeetCode URL for Valid Parenthesis String])"}),"\n",(0,l.jsx)(n.li,{children:"[Minimum Number of Arrows to Burst Balloons]([LeetCode URL for Minimum Number of Arrows to Burst Balloons])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-97",children:"Day 97"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Design YouTube (System Design)"}),"\n",(0,l.jsx)(n.li,{children:"Design a Car Rental System (OOD Design)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-98",children:"Day 98"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Single Number II]([LeetCode URL for Single Number II])"}),"\n",(0,l.jsx)(n.li,{children:"[Single Number III]([LeetCode URL for Single Number III])"}),"\n",(0,l.jsx)(n.li,{children:"[Maximum XOR of Two Numbers in an Array]([LeetCode URL for Maximum XOR of Two Numbers in an Array])"}),"\n",(0,l.jsx)(n.li,{children:"[Divide Two Integers]([LeetCode URL for Divide Two Integers])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-99",children:"Day 99"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Sum of Two Integers]([LeetCode URL for Sum of Two Integers])"}),"\n",(0,l.jsx)(n.li,{children:"[Bitwise AND of Numbers Range]([LeetCode URL for Bitwise AND of Numbers Range])"}),"\n",(0,l.jsx)(n.li,{children:"[Gray Code]([LeetCode URL for Gray Code])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-100",children:"Day 100"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Sliding Window Maximum]([LeetCode URL for Sliding Window Maximum])"}),"\n",(0,l.jsx)(n.li,{children:"[Trapping Rain Water]([LeetCode URL for Trapping Rain Water])"}),"\n",(0,l.jsx)(n.li,{children:"[Count of Smaller Numbers After Self]([LeetCode URL for Count of Smaller Numbers After Self])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-101",children:"Day 101"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Candy]([LeetCode URL for Candy])"}),"\n",(0,l.jsx)(n.li,{children:"[Reverse Pairs]([LeetCode URL for Reverse Pairs])"}),"\n",(0,l.jsx)(n.li,{children:"[Subarrays with K Different Integers]([LeetCode URL for Subarrays with K Different Integers])"}),"\n",(0,l.jsx)(n.li,{children:"[Number of Submatrices That Sum to Target]([LeetCode URL for Number of Submatrices That Sum to Target])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-102",children:"Day 102"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Shortest Subarray with Sum at Least K]([LeetCode URL for Shortest Subarray with Sum at Least K])"}),"\n",(0,l.jsx)(n.li,{children:"[Maximum Gap]([LeetCode URL for Maximum Gap])"}),"\n",(0,l.jsx)(n.li,{children:"[First Missing Positive]([LeetCode URL for First Missing Positive])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-103",children:"Day 103"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Shuffle an Array]([LeetCode URL for Shuffle an Array])"}),"\n",(0,l.jsx)(n.li,{children:"[Reverse Nodes in k-Group]([LeetCode URL for Reverse Nodes in k-Group])"}),"\n",(0,l.jsx)(n.li,{children:"[LFU Cache]([LeetCode URL for LFU Cache])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-104",children:"Day 104"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Design Google Drive (System Design)"}),"\n",(0,l.jsx)(n.li,{children:"Design LinkedIn (OOD Design)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-105",children:"Day 105"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Revise the questions solved from day 91 to 104."}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-106",children:"Day 106"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Basic Calculator]([LeetCode URL for Basic Calculator])"}),"\n",(0,l.jsx)(n.li,{children:"[Largest Rectangle in Histogram]([LeetCode URL for Largest Rectangle in Histogram])"}),"\n",(0,l.jsx)(n.li,{children:"[Longest Valid Parentheses]([LeetCode URL for Longest Valid Parentheses])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-107",children:"Day 107"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Maximum Frequency Stack]([LeetCode URL for Maximum Frequency Stack])"}),"\n",(0,l.jsx)(n.li,{children:"[The Skyline Problem]([LeetCode URL for The Skyline Problem])"}),"\n",(0,l.jsx)(n.li,{children:"[Minimum Window Substring]([LeetCode URL for Minimum Window Substring])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-108",children:"Day 108"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Palindrome Pairs]([LeetCode URL for Palindrome Pairs])"}),"\n",(0,l.jsx)(n.li,{children:"[Shortest Palindrome]([LeetCode URL for Shortest Palindrome])"}),"\n",(0,l.jsx)(n.li,{children:"[Text Justification]([LeetCode URL for Text Justification])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-109",children:"Day 109"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Nth Digit]([LeetCode URL for Nth Digit])"}),"\n",(0,l.jsx)(n.li,{children:"[Integer to English Words]([LeetCode URL for Integer to English Words])"}),"\n",(0,l.jsx)(n.li,{children:"[Max Points on a Line]([LeetCode URL for Max Points on a Line])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-110",children:"Day 110"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Maximum Profit in Job Scheduling]([LeetCode URL for Maximum Profit in Job Scheduling])"}),"\n",(0,l.jsx)(n.li,{children:"[Median of Two Sorted Arrays]([LeetCode URL for Median of Two Sorted Arrays])"}),"\n",(0,l.jsx)(n.li,{children:"[Find Minimum in Rotated Sorted Array II]([LeetCode URL for Find Minimum in Rotated Sorted Array II])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-111",children:"Day 111"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Word Ladder]([LeetCode URL for Word Ladder])"}),"\n",(0,l.jsx)(n.li,{children:"[Word Ladder II]([LeetCode URL for Word Ladder II])"}),"\n",(0,l.jsx)(n.li,{children:"[Longest Increasing Path in a Matrix]([LeetCode URL for Longest Increasing Path in a Matrix])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-112",children:"Day 112"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Design Twitter (System Design)"}),"\n",(0,l.jsx)(n.li,{children:"Design Facebook - a social network (System Design, OOD Design)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-113",children:"Day 113"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Word Search II]([LeetCode URL for Word Search II])"}),"\n",(0,l.jsx)(n.li,{children:"[Bus Routes]([LeetCode URL for Bus Routes])"}),"\n",(0,l.jsx)(n.li,{children:"[Critical Connections in a Network]([LeetCode URL for Critical Connections in a Network])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-114",children:"Day 114"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Shortest Path in a Grid with Obstacles Elimination]([LeetCode URL for Shortest Path in a Grid with Obstacles Elimination])"}),"\n",(0,l.jsx)(n.li,{children:"[Reconstruct Itinerary]([LeetCode URL for Reconstruct Itinerary])"}),"\n",(0,l.jsx)(n.li,{children:"[Making A Large Island]([LeetCode URL for Making A Large Island])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-115",children:"Day 115"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Merge k Sorted Lists]([LeetCode URL for Merge k Sorted Lists])"}),"\n",(0,l.jsx)(n.li,{children:"[Find Median from Data Stream]([LeetCode URL for Find Median from Data Stream])"}),"\n",(0,l.jsx)(n.li,{children:"[Smallest Range Covering Elements from K Lists]([LeetCode URL for Smallest Range Covering Elements from K Lists])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-116",children:"Day 116"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Minimum Number of Refueling Stops]([LeetCode URL for Minimum Number of Refueling Stops])"}),"\n",(0,l.jsx)(n.li,{children:"[Swim in Rising Water]([LeetCode URL for Swim in Rising Water])"}),"\n",(0,l.jsx)(n.li,{children:"[Longest Duplicate Substring]([LeetCode URL for Longest Duplicate Substring])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-117",children:"Day 117"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[N-Queens]([LeetCode URL for N-Queens])"}),"\n",(0,l.jsx)(n.li,{children:"[Permutation Sequence]([LeetCode URL for Permutation Sequence])"}),"\n",(0,l.jsx)(n.li,{children:"[Sudoku Solver]([LeetCode URL for Sudoku Solver])"}),"\n",(0,l.jsx)(n.li,{children:"[Palindrome Partitioning II]([LeetCode URL for Palindrome Partitioning II])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-118",children:"Day 118"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[K-th Symbol in Grammar]([LeetCode URL for K-th Symbol in Grammar])"}),"\n",(0,l.jsx)(n.li,{children:"[Remove Invalid Parentheses]([LeetCode URL for Remove Invalid Parentheses])"}),"\n",(0,l.jsx)(n.li,{children:"[Unique Paths III]([LeetCode URL for Unique Paths III])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-119",children:"Day 119"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Proximity Service (System Design)"}),"\n",(0,l.jsx)(n.li,{children:"Design Cricinfo (OOD Design)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-120",children:"Day 120"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Revise the questions solved from day 106 to 119."}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-121",children:"Day 121"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"What are your strengths and weaknesses?"}),"\n",(0,l.jsx)(n.li,{children:"Tell me about your most challenging customer."}),"\n",(0,l.jsx)(n.li,{children:"How did you resolve their issues and make them satisfied?"}),"\n",(0,l.jsx)(n.li,{children:"Describe a time when you had to make a decision without having all the data or information you needed. [cite: 131, 132, 133]"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-121-1",children:"Day 121"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Which company's leadership principle resonates with you most?"}),"\n",(0,l.jsx)(n.li,{children:"Tell me about a time when you were working on a project, and you realized that you needed to make changes to what you were doing."}),"\n",(0,l.jsx)(n.li,{children:"How did you feel about the work you had already completed? [cite: 134, 135]"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-122",children:"Day 122"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Nearby Friends (System Design)"}),"\n",(0,l.jsx)(n.li,{children:"Google Maps (System Design)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-123",children:"Day 123"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Edit Distance]([LeetCode URL for Edit Distance])"}),"\n",(0,l.jsx)(n.li,{children:"[Regular Expression Matching]([LeetCode URL for Regular Expression Matching])"}),"\n",(0,l.jsx)(n.li,{children:"[Maximal Rectangle]([LeetCode URL for Maximal Rectangle])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-124",children:"Day 124"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Can you give me an example of a time when you exceeded expectations?"}),"\n",(0,l.jsx)(n.li,{children:"Can you describe a time when you took the lead on a project?"}),"\n",(0,l.jsx)(n.li,{children:"Think about a time you received negative feedback."}),"\n",(0,l.jsx)(n.li,{children:"How did you deal with that? [cite: 138, 139, 140]"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-124-1",children:"Day 124"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Tell me about a time when you had to deal with ambiguity."}),"\n",(0,l.jsx)(n.li,{children:"How did you overcome the ambiguity to reach a positive outcome?"}),"\n",(0,l.jsx)(n.li,{children:"Have you been stressed over a certain project delivery in the past?"}),"\n",(0,l.jsx)(n.li,{children:"Did it affect your work-life balance?"}),"\n",(0,l.jsx)(n.li,{children:"How did you deal with it? [cite: 141, 142, 143]"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-125",children:"Day 125"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Distributed Message Queue (System Design)"}),"\n",(0,l.jsx)(n.li,{children:"Distributed Email Service (System Design)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-126",children:"Day 126"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Split Array Largest Sum]([LeetCode URL for Split Array Largest Sum])"}),"\n",(0,l.jsx)(n.li,{children:"[Burst Balloons]([LeetCode URL for Burst Balloons])"}),"\n",(0,l.jsx)(n.li,{children:"[Wildcard Matching]([LeetCode URL for Wildcard Matching])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-127",children:"Day 127"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Tell me about a time you have disagreed with your manager and how you handled it."}),"\n",(0,l.jsx)(n.li,{children:"How do you motivate others?"}),"\n",(0,l.jsx)(n.li,{children:"Can you give me an example of a time you have motivated someone?"}),"\n",(0,l.jsx)(n.li,{children:"Tell me about a time when you took a risk and failed."}),"\n",(0,l.jsx)(n.li,{children:"What did you learn from that experience? [cite: 146, 147, 148]"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-127-1",children:"Day 127"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"What obstacles have you encountered in your career?"}),"\n",(0,l.jsx)(n.li,{children:"How did you overcome them?"}),"\n",(0,l.jsx)(n.li,{children:"Tell me about a project you are proud of."}),"\n",(0,l.jsx)(n.li,{children:"How did you ensure high standards were met in delivering that project? [cite: 149, 150]"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-128",children:"Day 128"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"S3-like Object Storage (System Design)"}),"\n",(0,l.jsx)(n.li,{children:"Real-time Gaming Leaderboard (System Design)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-129",children:"Day 129"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Best Time to Buy and Sell Stock IV]([LeetCode URL for Best Time to Buy and Sell Stock IV])"}),"\n",(0,l.jsx)(n.li,{children:"[Word Break II]([LeetCode URL for Word Break II])"}),"\n",(0,l.jsx)(n.li,{children:"[Russian Doll Envelopes]([LeetCode URL for Russian Doll Envelopes])"}),"\n",(0,l.jsx)(n.li,{children:"[Validate Stack Sequences]([LeetCode URL for Validate Stack Sequences])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-130",children:"Day 130"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Why do you want to work for company?"}),"\n",(0,l.jsx)(n.li,{children:"Tell me about a time when you have had to work to earn someone\u2019s trust."}),"\n",(0,l.jsx)(n.li,{children:"Describe a time when you were given a project to work on, but your responsibilities were unclear."}),"\n",(0,l.jsx)(n.li,{children:"What did you do? [cite: 153, 154, 155]"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-130-1",children:"Day 130"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Tell me about a time you showed initiative."}),"\n",(0,l.jsx)(n.li,{children:"You see a co-worker struggling with a task."}),"\n",(0,l.jsx)(n.li,{children:"What do you do? [cite: 156, 157]"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-131",children:"Day 131"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Payment System (System Design)"}),"\n",(0,l.jsx)(n.li,{children:"Digital Wallet (System Design)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-132",children:"Day 132"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"[Minimum Insertion Steps to Make a String Palindrome]([LeetCode URL for Minimum Insertion Steps to Make a String Palindrome])"}),"\n",(0,l.jsx)(n.li,{children:"[Minimum Cost to Cut a Stick]([LeetCode URL for Minimum Cost to Cut a Stick])"}),"\n",(0,l.jsx)(n.li,{children:"[Minimum Number of Taps to Open to Water a Garden]([LeetCode URL for Minimum Number of Taps to Open to Water a Garden])"}),"\n",(0,l.jsx)(n.li,{children:"[Binary Tree Cameras]([LeetCode URL for Binary Tree Cameras])"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-133",children:"Day 133"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Describe for me a time when you had to choose short-term sacrifices to achieve long-term gains."}),"\n",(0,l.jsx)(n.li,{children:"How do you deal with having to provide feedback to someone?"}),"\n",(0,l.jsx)(n.li,{children:"Tell me about a time you failed to meet a deadline."}),"\n",(0,l.jsx)(n.li,{children:"How did you cope with that? [cite: 160, 161, 162]"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-133-1",children:"Day 133"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Has there been a time when your contribution was overlooked and somebody else from your team took credit for it?"}),"\n",(0,l.jsx)(n.li,{children:"How did you deal with it?"}),"\n",(0,l.jsx)(n.li,{children:"Tell me about a project you are proud of."}),"\n",(0,l.jsx)(n.li,{children:"How did you ensure high standards were met in delivering that project? [cite: 163, 164, 165]"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-133-2",children:"Day 133"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Have you been in a conflict with a fellow coworker?"}),"\n",(0,l.jsx)(n.li,{children:"How did you deal with it and what was the end result? [cite: 166, 167]"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-134",children:"Day 134"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Design Uber backend (System Design)"}),"\n",(0,l.jsx)(n.li,{children:"Design Ticketmaster (System Design, OOD Design)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-135",children:"Day 135"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Revise the questions solved from day 121 to 134."}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"day-136---150",children:"Day 136 - 150"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Revise the questions solved from day 1 to 134."}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var r=i(6540);const l={},d=r.createContext(l);function a(e){const n=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);