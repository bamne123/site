"use strict";(self.webpackChunkmy_stie=self.webpackChunkmy_stie||[]).push([[9691],{6312:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"leetcode/Medium/Remove Duplicates from Sorted Array II","title":"80 - Remove Duplicates from Sorted Array II","description":"Problem Information","source":"@site/docs/leetcode/Medium/80-Remove Duplicates from Sorted Array II.md","sourceDirName":"leetcode/Medium","slug":"/leetcode/Medium/Remove Duplicates from Sorted Array II","permalink":"/site/docs/leetcode/Medium/Remove Duplicates from Sorted Array II","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/leetcode/Medium/80-Remove Duplicates from Sorted Array II.md","tags":[],"version":"current","sidebarPosition":80,"frontMatter":{},"sidebar":"leetcodeSidebar","previous":{"title":"Zigzag Conversion","permalink":"/site/docs/leetcode/Medium/Zigzag Conversion"}}');var r=t(4848),l=t(8453),a=t(5537),i=t(9329);const o={},c="80 - Remove Duplicates from Sorted Array II",u={},d=[{value:"Problem Information",id:"problem-information",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Constraints",id:"constraints",level:2},{value:"Solution Approach",id:"solution-approach",level:2},{value:"Complexity Analysis",id:"complexity-analysis",level:3},{value:"Code Implementation",id:"code-implementation",level:3},{value:"Step-by-Step Explanation",id:"step-by-step-explanation",level:3},{value:"Alternative Approaches",id:"alternative-approaches",level:2},{value:"Common Mistakes and Pitfalls",id:"common-mistakes-and-pitfalls",level:2},{value:"Related Problems",id:"related-problems",level:2}];function h(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"80---remove-duplicates-from-sorted-array-ii",children:"80 - Remove Duplicates from Sorted Array II"})}),"\n",(0,r.jsx)(n.h2,{id:"problem-information",children:"Problem Information"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Difficulty:"})," Medium"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Category:"})," Array, Two Pointers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Link:"})," ",(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii",children:"LeetCode"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,r.jsx)(n.p,{children:"Given a sorted array nums with duplicates, you need to remove the duplicates in-place such that each element appears only once and return the new length of the array."}),"\n",(0,r.jsx)(n.p,{children:"Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example 1:"}),"\nInput: nums = [1,1,1,2,2,3]\nOutput: 5, nums = [1,2,3,",(0,r.jsx)(n.em,{children:","}),"]"]}),"\n",(0,r.jsxs)(n.p,{children:["Explanation: Your function should return length = 5, and nums should become [1,2,3,",(0,r.jsx)(n.em,{children:","}),"]. It doesn't matter what you put in those extra two ends."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example 2:"}),"\nInput: nums = [0,0,1,1,1,2,2,3,3,4]\nOutput: 5, nums = [0,1,2,3,4]"]}),"\n",(0,r.jsx)(n.h2,{id:"constraints",children:"Constraints"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"1 <= nums.length <= 3 * 10^4"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"-10^9 <= nums[i] <= 10^9"})}),"\n",(0,r.jsx)(n.li,{children:"nums is sorted in ascending order."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"solution-approach",children:"Solution Approach"}),"\n",(0,r.jsx)(n.p,{children:"The problem can be solved efficiently using the Two Pointers approach with an optimization to handle the duplicates."}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Initialization:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Initialize two pointers, ",(0,r.jsx)(n.code,{children:"slow"})," and ",(0,r.jsx)(n.code,{children:"fast"}),", both pointing to the beginning of the array."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Traversal:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Iterate through the array using the ",(0,r.jsx)(n.code,{children:"fast"})," pointer."]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"nums[fast]"})," is different from ",(0,r.jsx)(n.code,{children:"nums[slow]"}),", it's a unique element. Move ",(0,r.jsx)(n.code,{children:"slow"})," forward and copy ",(0,r.jsx)(n.code,{children:"nums[fast]"})," to ",(0,r.jsx)(n.code,{children:"nums[slow]"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Duplicate Handling:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"nums[fast]"})," is equal to ",(0,r.jsx)(n.code,{children:"nums[slow]"}),", it's a duplicate."]}),"\n",(0,r.jsxs)(n.li,{children:["Skip the duplicate by incrementing ",(0,r.jsx)(n.code,{children:"fast"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Return Length:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The value of ",(0,r.jsx)(n.code,{children:"slow"})," will point to the next available position for a unique element."]}),"\n",(0,r.jsxs)(n.li,{children:["Return ",(0,r.jsx)(n.code,{children:"slow + 1"})," as the new length of the array."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"complexity-analysis",children:"Complexity Analysis"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Time Complexity:"})," O(n)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["We traverse the array once using the ",(0,r.jsx)(n.code,{children:"fast"})," pointer."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Space Complexity:"})," O(1)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"We only use a constant amount of extra space for the pointers."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"code-implementation",children:"Code Implementation"}),"\n",(0,r.jsxs)(a.A,{defaultValue:"python",groupId:"cody",values:[{label:"Javascript",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"Csharp",value:"csharp"}],children:[(0,r.jsx)(i.A,{value:"javascript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar removeDuplicates = function(nums) {\n    let slow = 0;\n    let fast = 0;\n    while (fast < nums.length) {\n        if (nums[fast] !== nums[slow]) {\n            slow++;\n            nums[slow] = nums[fast];\n        }\n        fast++;\n    }\n    return slow + 1;\n};\n"})})}),(0,r.jsx)(i.A,{value:"python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def removeDuplicates(nums):\n    slow = 0\n    fast = 0\n    while fast < len(nums):\n        if nums[fast] != nums[slow]:\n            slow += 1\n            nums[slow] = nums[fast]\n        fast += 1\n    return slow + 1\n"})})}),(0,r.jsx)(i.A,{value:"go",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func removeDuplicates(nums []int) int {\n    slow := 0\n    fast := 0\n    for fast < len(nums) {\n        if nums[fast] != nums[slow] {\n            slow++\n            nums[slow] = nums[fast]\n        }\n        fast++\n    }\n    return slow + 1\n}\n"})})}),(0,r.jsx)(i.A,{value:"java",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"class Solution {\n    public int removeDuplicates(int[] nums) {\n        int slow = 0;\n        int fast = 0;\n        while (fast < nums.length) {\n            if (nums[fast] != nums[slow]) {\n                slow++;\n                nums[slow] = nums[fast];\n            }\n            fast++;\n        }\n        return slow + 1;\n    }\n}\n"})})}),(0,r.jsx)(i.A,{value:"csharp",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"public class Solution {\n    public int RemoveDuplicates(int[] nums) {\n        int slow = 0;\n        int fast = 0;\n        while (fast < nums.Length) {\n            if (nums[fast] != nums[slow]) {\n                slow++;\n                nums[slow] = nums[fast];\n            }\n            fast++;\n        }\n        return slow + 1;\n    }\n}\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"step-by-step-explanation",children:"Step-by-Step Explanation"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Start with two pointers, ",(0,r.jsx)(n.code,{children:"slow"})," and ",(0,r.jsx)(n.code,{children:"fast"}),", both at index 0."]}),"\n",(0,r.jsxs)(n.li,{children:["Iterate through the array using the ",(0,r.jsx)(n.code,{children:"fast"})," pointer."]}),"\n",(0,r.jsxs)(n.li,{children:["If the element at ",(0,r.jsx)(n.code,{children:"fast"})," is different from the element at ",(0,r.jsx)(n.code,{children:"slow"}),", it means we've encountered a new unique element. Move the ",(0,r.jsx)(n.code,{children:"slow"})," pointer forward by one position and copy the element at ",(0,r.jsx)(n.code,{children:"fast"})," to ",(0,r.jsx)(n.code,{children:"slow"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["If the elements are the same, it's a duplicate. Simply increment the ",(0,r.jsx)(n.code,{children:"fast"})," pointer to skip the duplicate."]}),"\n",(0,r.jsxs)(n.li,{children:["Continue this process until ",(0,r.jsx)(n.code,{children:"fast"})," reaches the end of the array."]}),"\n",(0,r.jsxs)(n.li,{children:["The value of ",(0,r.jsx)(n.code,{children:"slow"})," will point to the last unique element in the modified array."]}),"\n",(0,r.jsxs)(n.li,{children:["Return ",(0,r.jsx)(n.code,{children:"slow + 1"})," as the new length of the array."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"alternative-approaches",children:"Alternative Approaches"}),"\n",(0,r.jsx)(n.h2,{id:"common-mistakes-and-pitfalls",children:"Common Mistakes and Pitfalls"}),"\n",(0,r.jsx)(n.h2,{id:"related-problems",children:"Related Problems"})]})}function m(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},9329:(e,n,t)=>{t.d(n,{A:()=>a});t(6540);var s=t(4164);const r={tabItem:"tabItem_Ymn6"};var l=t(4848);function a(e){let{children:n,hidden:t,className:a}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,s.A)(r.tabItem,a),hidden:t,children:n})}},5537:(e,n,t)=>{t.d(n,{A:()=>w});var s=t(6540),r=t(4164),l=t(5627),a=t(6347),i=t(372),o=t(604),c=t(1861),u=t(8749);function d(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:r}}=e;return{value:n,label:t,attributes:s,default:r}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:t}=e;const r=(0,a.W6)(),l=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o.aZ)(l),(0,s.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(r.location.search);n.set(l,e),r.replace({...r.location,search:n.toString()})}),[l,r])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,l=h(e),[a,o]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=t.find((e=>e.default))??t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:l}))),[c,d]=p({queryString:t,groupId:r}),[f,x]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,l]=(0,u.Dv)(t);return[r,(0,s.useCallback)((e=>{t&&l.set(e)}),[t,l])]}({groupId:r}),j=(()=>{const e=c??f;return m({value:e,tabValues:l})?e:null})();(0,i.A)((()=>{j&&o(j)}),[j]);return{selectedValue:a,selectValue:(0,s.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),x(e)}),[d,x,l]),tabValues:l}}var x=t(9136);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(4848);function b(e){let{className:n,block:t,selectedValue:s,selectValue:a,tabValues:i}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.a_)(),u=e=>{const n=e.currentTarget,t=o.indexOf(n),r=i[t].value;r!==s&&(c(n),a(r))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:l}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>{o.push(e)},onKeyDown:d,onClick:u,...l,className:(0,r.A)("tabs__item",j.tabItem,l?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function g(e){let{lazy:n,children:t,selectedValue:l}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===l));return e?(0,s.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==l})))})}function y(e){const n=f(e);return(0,v.jsxs)("div",{className:(0,r.A)("tabs-container",j.tabList),children:[(0,v.jsx)(b,{...n,...e}),(0,v.jsx)(g,{...n,...e})]})}function w(e){const n=(0,x.A)();return(0,v.jsx)(y,{...e,children:d(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var s=t(6540);const r={},l=s.createContext(r);function a(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);