"use strict";(self.webpackChunkmy_stie=self.webpackChunkmy_stie||[]).push([[9691],{6312:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>m,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"leetcode/Medium/Remove Duplicates from Sorted Array II","title":"80 - Remove Duplicates from Sorted Array II","description":"Problem Information","source":"@site/docs/leetcode/Medium/80-Remove Duplicates from Sorted Array II.md","sourceDirName":"leetcode/Medium","slug":"/leetcode/Medium/Remove Duplicates from Sorted Array II","permalink":"/site/docs/leetcode/Medium/Remove Duplicates from Sorted Array II","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/leetcode/Medium/80-Remove Duplicates from Sorted Array II.md","tags":[],"version":"current","sidebarPosition":80,"frontMatter":{},"sidebar":"leetcodeSidebar","previous":{"title":"6 - Zigzag Conversion","permalink":"/site/docs/leetcode/Medium/Zigzag Conversion"}}');var s=t(4848),l=t(8453),i=t(5537),o=t(9329);const a={},c="80 - Remove Duplicates from Sorted Array II",u={},d=[{value:"Problem Information",id:"problem-information",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Hints",id:"hints",level:3},{value:"Solution Approach",id:"solution-approach",level:2},{value:"Complexity Analysis",id:"complexity-analysis",level:3},{value:"Code Implementation",id:"code-implementation",level:3},{value:"Step-by-Step Explanation",id:"step-by-step-explanation",level:3},{value:"Alternative Approaches",id:"alternative-approaches",level:2},{value:"Common Mistakes and Pitfalls",id:"common-mistakes-and-pitfalls",level:2},{value:"Related Problems",id:"related-problems",level:2}];function h(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"80---remove-duplicates-from-sorted-array-ii",children:"80 - Remove Duplicates from Sorted Array II"})}),"\n",(0,s.jsx)(n.h2,{id:"problem-information",children:"Problem Information"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Difficulty:"})," Medium"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Category:"})," Array, Two Pointers"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Link:"})," ",(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii",children:"LeetCode"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,s.jsxs)(n.p,{children:["Given an integer array ",(0,s.jsx)(n.code,{children:"nums"})," sorted in ",(0,s.jsx)(n.strong,{children:"non-decreasing order"}),", remove some duplicates ",(0,s.jsx)(n.strong,{children:"in-place"})," such that each unique element appears ",(0,s.jsx)(n.strong,{children:"at most twice"}),". The ",(0,s.jsx)(n.strong,{children:"relative order"})," of the elements should be kept the ",(0,s.jsx)(n.strong,{children:"same"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Since it is impossible to change the length of the array in some languages, you must instead have the result be placed in the ",(0,s.jsx)(n.strong,{children:"first part"})," of the array ",(0,s.jsx)(n.code,{children:"nums"}),". More formally, if there are ",(0,s.jsx)(n.code,{children:"k"})," elements after removing the duplicates, then the first ",(0,s.jsx)(n.code,{children:"k"})," elements of ",(0,s.jsx)(n.code,{children:"nums"}),"\xa0should hold the final result. It does not matter what you leave beyond the first\xa0",(0,s.jsx)(n.code,{children:"k"}),"\xa0elements."]}),"\n",(0,s.jsxs)(n.p,{children:["Return ",(0,s.jsx)(n.code,{children:"k"}),"* after placing the final result in the first ",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.code,{children:"k"})})," slots of ",(0,s.jsx)(n.code,{children:"nums"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Do ",(0,s.jsx)(n.strong,{children:"not"})," allocate extra space for another array. You must do this by ",(0,s.jsx)(n.strong,{children:"modifying the input array in-place"})," with O(1) extra memory."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Custom Judge:"})}),"\n",(0,s.jsx)(n.p,{children:"The judge will test your solution with the following code:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"int[] nums = [...]; // Input array\nint[] expectedNums = [...]; // The expected answer with correct length\n\nint k = removeDuplicates(nums); // Calls your implementation\n\nassert k == expectedNums.length;\nfor (int i = 0; i < k; i++) {\n    assert nums[i] == expectedNums[i];\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If all assertions pass, then your solution will be ",(0,s.jsx)(n.strong,{children:"accepted"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Input: nums = [1,1,1,2,2,3]\nOutput: 5, nums = [1,1,2,2,3,_]\nExplanation: Your function should return k = 5, with the first five elements of nums being 1, 1, 2, 2 and 3 respectively.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Input: nums = [0,0,1,1,1,1,2,3,3]\nOutput: 7, nums = [0,0,1,1,2,3,3,_,_]\nExplanation: Your function should return k = 7, with the first seven elements of nums being 0, 0, 1, 1, 2, 3 and 3 respectively.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"1 <= nums.length <= 3 * 10^4"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"-10^4 <= nums[i] <= 10^4"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"nums"})," is sorted in ",(0,s.jsx)(n.strong,{children:"non-decreasing"})," order."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"hints",children:"Hints"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use two pointers, one for reading and one for writing."}),"\n",(0,s.jsx)(n.li,{children:"Check the current element with the element two positions before the write pointer to decide whether to write the current element."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"solution-approach",children:"Solution Approach"}),"\n",(0,s.jsx)(n.p,{children:"The solution uses a two-pointer approach to solve the problem in-place. One pointer (fast) iterates through the array, and another pointer (slow) marks the position where the non-duplicate elements should be placed. We allow at most two occurrences of each element."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Video Explanation:"})}),"\n",(0,s.jsx)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/ycAq8iqh0TI",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:""}),"\n",(0,s.jsx)(n.h3,{id:"complexity-analysis",children:"Complexity Analysis"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Time Complexity:"})," O(n)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Where n is the length of the input array, since we iterate through the array once."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Space Complexity:"})," O(1)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The algorithm operates in-place, using only a constant amount of extra space."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"code-implementation",children:"Code Implementation"}),"\n",(0,s.jsxs)(i.A,{defaultValue:"python",groupId:"cody",values:[{label:"python",value:"python"},{label:"javascript",value:"javascript"},{label:"java",value:"java"},{label:"csharp",value:"csharp"},{label:"go",value:"go"}],children:[(0,s.jsx)(o.A,{value:"python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        if len(nums) < 3:\n            return len(nums)\n\n        slow = 2\n        for fast in range(2, len(nums)):\n            if nums[fast] != nums[slow-2]:\n                nums[slow] = nums[fast]\n                slow += 1\n\n        return slow\n"})})}),(0,s.jsx)(o.A,{value:"javascript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar removeDuplicates = function(nums) {\n    if (nums.length < 3) {\n        return nums.length;\n    }\n\n    let slow = 2;\n    for (let fast = 2; fast < nums.length; fast++) {\n        if (nums[fast] !== nums[slow - 2]) {\n            nums[slow] = nums[fast];\n            slow++;\n        }\n    }\n\n    return slow;\n};\n"})})}),(0,s.jsx)(o.A,{value:"java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"class Solution {\n    public int removeDuplicates(int[] nums) {\n        if (nums.length < 3) {\n            return nums.length;\n        }\n\n        int slow = 2;\n        for (int fast = 2; fast < nums.length; fast++) {\n            if (nums[fast] != nums[slow - 2]) {\n                nums[slow] = nums[fast];\n                slow++;\n            }\n        }\n\n        return slow;\n    }\n}\n"})})}),(0,s.jsx)(o.A,{value:"csharp",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public class Solution {\n    public int RemoveDuplicates(int[] nums) {\n        if (nums.Length < 3) {\n            return nums.Length;\n        }\n\n        int slow = 2;\n        for (int fast = 2; fast < nums.Length; fast++) {\n            if (nums[fast] != nums[slow - 2]) {\n                nums[slow] = nums[fast];\n                slow++;\n            }\n        }\n\n        return slow;\n    }\n}\n"})})}),(0,s.jsx)(o.A,{value:"go",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"func removeDuplicates(nums []int) int {\n    if len(nums) < 3 {\n        return len(nums)\n    }\n\n    slow := 2\n    for fast := 2; fast < len(nums); fast++ {\n        if nums[fast] != nums[slow-2] {\n            nums[slow] = nums[fast]\n            slow++\n        }\n    }\n\n    return slow\n}\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"step-by-step-explanation",children:"Step-by-Step Explanation"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Check if the length of the array is less than 3. If so, return the length since no duplicates need to be removed."}),"\n",(0,s.jsx)(n.li,{children:"Initialize a slow pointer to 2, which represents the index up to which the array will contain the elements with at most two occurrences."}),"\n",(0,s.jsx)(n.li,{children:"Iterate through the array starting from the third element (index 2) using a fast pointer."}),"\n",(0,s.jsx)(n.li,{children:"Compare the current element at the fast pointer with the element two positions before the slow pointer."}),"\n",(0,s.jsx)(n.li,{children:"If they are different, it means the current element is not a duplicate that exceeds the allowed count (2), so copy the current element to the slow pointer's position and increment the slow pointer."}),"\n",(0,s.jsx)(n.li,{children:"After the loop finishes, the slow pointer represents the new length of the array with the duplicates removed. Return the slow pointer."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"alternative-approaches",children:"Alternative Approaches"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Using a HashMap to Count Occurrences"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Time Complexity: O(n)"}),"\n",(0,s.jsx)(n.li,{children:"Space Complexity: O(n)"}),"\n",(0,s.jsx)(n.li,{children:"Trade-offs: Requires additional space to store counts, but can handle unsorted arrays and different duplicate limits."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Using a Counter Object (Python)"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Time Complexity: O(n)"}),"\n",(0,s.jsx)(n.li,{children:"Space Complexity: O(n)"}),"\n",(0,s.jsx)(n.li,{children:"Trade-offs: More concise code but still requires additional space."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"common-mistakes-and-pitfalls",children:"Common Mistakes and Pitfalls"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Incorrectly handling edge cases, such as arrays with fewer than 3 elements."}),"\n",(0,s.jsx)(n.li,{children:"Not updating the slow pointer correctly, leading to incorrect placement of non-duplicate elements."}),"\n",(0,s.jsx)(n.li,{children:"Using extra space when the problem requires an in-place solution."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"related-problems",children:"Related Problems"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/remove-duplicates-from-sorted-array",children:"Remove Duplicates from Sorted Array"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/move-zeroes",children:"Move Zeroes"})}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},9329:(e,n,t)=>{t.d(n,{A:()=>i});t(6540);var r=t(4164);const s={tabItem:"tabItem_Ymn6"};var l=t(4848);function i(e){let{children:n,hidden:t,className:i}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,r.A)(s.tabItem,i),hidden:t,children:n})}},5537:(e,n,t)=>{t.d(n,{A:()=>w});var r=t(6540),s=t(4164),l=t(5627),i=t(6347),o=t(372),a=t(604),c=t(1861),u=t(8749);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:s}}=e;return{value:n,label:t,attributes:r,default:s}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:t}=e;const s=(0,i.W6)(),l=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,a.aZ)(l),(0,r.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(s.location.search);n.set(l,e),s.replace({...s.location,search:n.toString()})}),[l,s])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,l=h(e),[i,a]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:l}))),[c,d]=p({queryString:t,groupId:s}),[f,x]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,l]=(0,u.Dv)(t);return[s,(0,r.useCallback)((e=>{t&&l.set(e)}),[t,l])]}({groupId:s}),j=(()=>{const e=c??f;return m({value:e,tabValues:l})?e:null})();(0,o.A)((()=>{j&&a(j)}),[j]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);a(e),d(e),x(e)}),[d,x,l]),tabValues:l}}var x=t(9136);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(4848);function g(e){let{className:n,block:t,selectedValue:r,selectValue:i,tabValues:o}=e;const a=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.a_)(),u=e=>{const n=e.currentTarget,t=a.indexOf(n),s=o[t].value;s!==r&&(c(n),i(s))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=a.indexOf(e.currentTarget)+1;n=a[t]??a[0];break}case"ArrowLeft":{const t=a.indexOf(e.currentTarget)-1;n=a[t]??a[a.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:l}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>{a.push(e)},onKeyDown:d,onClick:u,...l,className:(0,s.A)("tabs__item",j.tabItem,l?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function b(e){let{lazy:n,children:t,selectedValue:l}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===l));return e?(0,r.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==l})))})}function y(e){const n=f(e);return(0,v.jsxs)("div",{className:(0,s.A)("tabs-container",j.tabList),children:[(0,v.jsx)(g,{...n,...e}),(0,v.jsx)(b,{...n,...e})]})}function w(e){const n=(0,x.A)();return(0,v.jsx)(y,{...e,children:d(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var r=t(6540);const s={},l=r.createContext(s);function i(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);