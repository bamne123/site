"use strict";(self.webpackChunkmy_stie=self.webpackChunkmy_stie||[]).push([[1119],{8137:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"leetcode/Medium/Longest Substring Without Repeating Characters","title":"3 - Longest Substring Without Repeating Characters","description":"Problem Information","source":"@site/docs/leetcode/Medium/3-Longest Substring Without Repeating Characters.md","sourceDirName":"leetcode/Medium","slug":"/leetcode/Medium/Longest Substring Without Repeating Characters","permalink":"/site/docs/leetcode/Medium/Longest Substring Without Repeating Characters","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/leetcode/Medium/3-Longest Substring Without Repeating Characters.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"leetcodeSidebar","previous":{"title":"2 - Add Two Numbers","permalink":"/site/docs/leetcode/Medium/Add Two Numbers"},"next":{"title":"5 - Longest Palindromic Substring","permalink":"/site/docs/leetcode/Medium/Longest Palindromic Substring"}}');var r=t(4848),s=t(8453),i=t(5537),l=t(9329);const c={},o="3 - Longest Substring Without Repeating Characters",h={},d=[{value:"Problem Information",id:"problem-information",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Examples",id:"examples",level:3},{value:"Constraints",id:"constraints",level:3},{value:"Hints",id:"hints",level:3},{value:"Solution Approach",id:"solution-approach",level:2},{value:"Complexity Analysis",id:"complexity-analysis",level:3},{value:"Code Implementation",id:"code-implementation",level:3},{value:"Step-by-Step Explanation",id:"step-by-step-explanation",level:3},{value:"Alternative Approaches",id:"alternative-approaches",level:2},{value:"Common Mistakes and Pitfalls",id:"common-mistakes-and-pitfalls",level:2},{value:"Related Problems",id:"related-problems",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"3---longest-substring-without-repeating-characters",children:"3 - Longest Substring Without Repeating Characters"})}),"\n",(0,r.jsx)(n.h2,{id:"problem-information",children:"Problem Information"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Difficulty:"})," Medium"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Category:"})," Hash Table, String, Sliding Window"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Link:"})," ",(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/longest-substring-without-repeating-characters",children:"LeetCode"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,r.jsxs)(n.p,{children:["Given a string ",(0,r.jsx)(n.code,{children:"s"}),", find the length of the ",(0,r.jsx)(n.strong,{children:"longest substring"})," without repeating characters."]}),"\n",(0,r.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,r.jsxs)(n.p,{children:["Input: ",(0,r.jsx)(n.code,{children:'s = "abcabcbb"'}),"\nOutput: ",(0,r.jsx)(n.code,{children:"3"}),'\nExplanation: The answer is "abc", with the length of 3.']}),"\n",(0,r.jsxs)(n.p,{children:["Input: ",(0,r.jsx)(n.code,{children:'s = "bbbbb"'}),"\nOutput: ",(0,r.jsx)(n.code,{children:"1"}),'\nExplanation: The answer is "b", with the length of 1.']}),"\n",(0,r.jsxs)(n.p,{children:["Input: ",(0,r.jsx)(n.code,{children:'s = "pwwkew"'}),"\nOutput: ",(0,r.jsx)(n.code,{children:"3"}),'\nExplanation: The answer is "wke", with the length of 3.\nNotice that the answer must be a substring, "pwke" is a subsequence and not a substring.']}),"\n",(0,r.jsx)(n.h3,{id:"constraints",children:"Constraints"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"0 <= s.length <= 5 * 10^4"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"s"})," consists of English letters, digits, symbols and spaces."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"hints",children:"Hints"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use a sliding window approach."}),"\n",(0,r.jsx)(n.li,{children:"Use a hash table to store the characters in the current window."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"solution-approach",children:"Solution Approach"}),"\n",(0,r.jsx)(n.p,{children:"The problem can be solved using the sliding window technique. We maintain a window of characters and a hash table to keep track of the characters in the current window. We expand the window by one character at a time. If the character is already in the hash table, we shrink the window from the left until the character is no longer in the hash table. We update the maximum length of the substring without repeating characters as we go."}),"\n",(0,r.jsx)(n.h3,{id:"complexity-analysis",children:"Complexity Analysis"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Time Complexity:"})," O(n)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"We iterate through the string once, where n is the length of the string."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Space Complexity:"})," O(m)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"We use a hash table to store the characters in the current window, where m is the size of the character set. In the worst case, all characters in the string are unique, so the space complexity is O(n)."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"code-implementation",children:"Code Implementation"}),"\n",(0,r.jsxs)(i.A,{defaultValue:"python",groupId:"cody",values:[{label:"python",value:"python"},{label:"javascript",value:"javascript"},{label:"java",value:"java"},{label:"csharp",value:"csharp"},{label:"go",value:"go"}],children:[(0,r.jsx)(l.A,{value:"python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def lengthOfLongestSubstring(s: str) -> int:\n    char_index_map = {}\n    start = 0\n    max_length = 0\n\n    for end, char in enumerate(s):\n        if char in char_index_map and char_index_map[char] >= start:\n            start = char_index_map[char] + 1\n        char_index_map[char] = end\n        max_length = max(max_length, end - start + 1)\n\n    return max_length\n"})})}),(0,r.jsx)(l.A,{value:"javascript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"function lengthOfLongestSubstring(s) {\n  let charIndexMap = {};\n  let start = 0;\n  let maxLength = 0;\n\n  for (let end = 0; end < s.length; end++) {\n    const char = s[end];\n    if (charIndexMap[char] !== undefined && charIndexMap[char] >= start) {\n      start = charIndexMap[char] + 1;\n    }\n    charIndexMap[char] = end;\n    maxLength = Math.max(maxLength, end - start + 1);\n  }\n\n  return maxLength;\n}\n"})})}),(0,r.jsx)(l.A,{value:"java",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"import java.util.HashMap;\nimport java.util.Map;\n\nclass Solution {\n    public int lengthOfLongestSubstring(String s) {\n        Map<Character, Integer> charIndexMap = new HashMap<>();\n        int start = 0;\n        int maxLength = 0;\n\n        for (int end = 0; end < s.length(); end++) {\n            char c = s.charAt(end);\n            if (charIndexMap.containsKey(c) && charIndexMap.get(c) >= start) {\n                start = charIndexMap.get(c) + 1;\n            }\n            charIndexMap.put(c, end);\n            maxLength = Math.max(maxLength, end - start + 1);\n        }\n\n        return maxLength;\n    }\n}\n"})})}),(0,r.jsx)(l.A,{value:"csharp",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"using System;\nusing System.Collections.Generic;\n\npublic class Solution {\n    public int LengthOfLongestSubstring(string s) {\n        Dictionary<char, int> charIndexMap = new Dictionary<char, int>();\n        int start = 0;\n        int maxLength = 0;\n\n        for (int end = 0; end < s.Length; end++) {\n            char c = s[end];\n            if (charIndexMap.ContainsKey(c) && charIndexMap[c] >= start) {\n                start = charIndexMap[c] + 1;\n            }\n            charIndexMap[c] = end;\n            maxLength = Math.Max(maxLength, end - start + 1);\n        }\n\n        return maxLength;\n    }\n}\n"})})}),(0,r.jsx)(l.A,{value:"go",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func lengthOfLongestSubstring(s string) int {\n    charIndexMap := make(map[rune]int)\n    start := 0\n    maxLength := 0\n\n    for end, char := range s {\n        if index, ok := charIndexMap[char]; ok && index >= start {\n            start = index + 1\n        }\n        charIndexMap[char] = end\n        maxLength = max(maxLength, end - start + 1)\n    }\n\n    return maxLength\n}\n\nfunc max(a, b int) int {\n    if a > b {\n        return a\n    }\n    return b\n}\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"step-by-step-explanation",children:"Step-by-Step Explanation"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Initialize a hash map ",(0,r.jsx)(n.code,{children:"char_index_map"})," to store the index of each character in the string."]}),"\n",(0,r.jsxs)(n.li,{children:["Initialize ",(0,r.jsx)(n.code,{children:"start"})," to 0, which represents the starting index of the current window."]}),"\n",(0,r.jsxs)(n.li,{children:["Initialize ",(0,r.jsx)(n.code,{children:"max_length"})," to 0, which represents the maximum length of the substring without repeating characters."]}),"\n",(0,r.jsxs)(n.li,{children:["Iterate through the string ",(0,r.jsx)(n.code,{children:"s"})," using a for loop with index ",(0,r.jsx)(n.code,{children:"end"})," and character ",(0,r.jsx)(n.code,{children:"char"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Check if the character ",(0,r.jsx)(n.code,{children:"char"})," is in the hash map ",(0,r.jsx)(n.code,{children:"char_index_map"})," and if its index is greater than or equal to ",(0,r.jsx)(n.code,{children:"start"}),".","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If it is, update ",(0,r.jsx)(n.code,{children:"start"})," to ",(0,r.jsx)(n.code,{children:"char_index_map[char] + 1"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Update the index of the character ",(0,r.jsx)(n.code,{children:"char"})," in the hash map ",(0,r.jsx)(n.code,{children:"char_index_map"})," to ",(0,r.jsx)(n.code,{children:"end"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Update ",(0,r.jsx)(n.code,{children:"max_length"})," to the maximum of ",(0,r.jsx)(n.code,{children:"max_length"})," and ",(0,r.jsx)(n.code,{children:"end - start + 1"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Return ",(0,r.jsx)(n.code,{children:"max_length"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"alternative-approaches",children:"Alternative Approaches"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Brute Force"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Time Complexity: O(n^3)"}),"\n",(0,r.jsx)(n.li,{children:"Space Complexity: O(m)"}),"\n",(0,r.jsx)(n.li,{children:"Trade-offs: Simple to understand but inefficient."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Using a Set"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Time Complexity: O(n)"}),"\n",(0,r.jsx)(n.li,{children:"Space Complexity: O(m)"}),"\n",(0,r.jsx)(n.li,{children:"Trade-offs: Similar to the hash table approach, but uses a set instead."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"common-mistakes-and-pitfalls",children:"Common Mistakes and Pitfalls"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Forgetting to update the ",(0,r.jsx)(n.code,{children:"start"})," index when a repeating character is found."]}),"\n",(0,r.jsx)(n.li,{children:"Not considering the case when the input string is empty."}),"\n",(0,r.jsx)(n.li,{children:"Using incorrect data structures for storing the characters in the current window."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"related-problems",children:"Related Problems"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/longest-repeating-character-replacement/",children:"Longest Repeating Character Replacement"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/substring-with-concatenation-of-all-words/",children:"Substring with Concatenation of All Words"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},9329:(e,n,t)=>{t.d(n,{A:()=>i});t(6540);var a=t(4164);const r={tabItem:"tabItem_Ymn6"};var s=t(4848);function i(e){let{children:n,hidden:t,className:i}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,i),hidden:t,children:n})}},5537:(e,n,t)=>{t.d(n,{A:()=>y});var a=t(6540),r=t(4164),s=t(5627),i=t(6347),l=t(372),c=t(604),o=t(1861),h=t(8749);function d(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}(t);return function(e){const n=(0,o.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:t}=e;const r=(0,i.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c.aZ)(s),(0,a.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})}),[s,r])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,s=u(e),[i,c]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:s}))),[o,d]=x({queryString:t,groupId:r}),[m,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,s]=(0,h.Dv)(t);return[r,(0,a.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:r}),b=(()=>{const e=o??m;return p({value:e,tabValues:s})?e:null})();(0,l.A)((()=>{b&&c(b)}),[b]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);c(e),d(e),g(e)}),[d,g,s]),tabValues:s}}var g=t(9136);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=t(4848);function f(e){let{className:n,block:t,selectedValue:a,selectValue:i,tabValues:l}=e;const c=[],{blockElementScrollPositionUntilNextRender:o}=(0,s.a_)(),h=e=>{const n=e.currentTarget,t=c.indexOf(n),r=l[t].value;r!==a&&(o(n),i(r))},d=e=>{let n=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>{c.push(e)},onKeyDown:d,onClick:h,...s,className:(0,r.A)("tabs__item",b.tabItem,s?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:s}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===s));return e?(0,a.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function w(e){const n=m(e);return(0,j.jsxs)("div",{className:(0,r.A)("tabs-container",b.tabList),children:[(0,j.jsx)(f,{...n,...e}),(0,j.jsx)(v,{...n,...e})]})}function y(e){const n=(0,g.A)();return(0,j.jsx)(w,{...e,children:d(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var a=t(6540);const r={},s=a.createContext(r);function i(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);