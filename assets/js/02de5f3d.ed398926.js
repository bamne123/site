"use strict";(self.webpackChunkmy_stie=self.webpackChunkmy_stie||[]).push([[8784],{7741:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"leetcode/Easy/Find All Numbers Disappeared in an Array","title":"448 - Find All Numbers Disappeared in an Array","description":"Problem Information","source":"@site/docs/leetcode/Easy/448-Find All Numbers Disappeared in an Array.md","sourceDirName":"leetcode/Easy","slug":"/leetcode/Easy/Find All Numbers Disappeared in an Array","permalink":"/site/docs/leetcode/Easy/Find All Numbers Disappeared in an Array","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/leetcode/Easy/448-Find All Numbers Disappeared in an Array.md","tags":[],"version":"current","sidebarPosition":448,"frontMatter":{},"sidebar":"leetcodeSidebar","previous":{"title":"350 - Intersection of Two Arrays II","permalink":"/site/docs/leetcode/Easy/Intersection of Two Arrays II"},"next":{"title":"724 - Find Pivot Index","permalink":"/site/docs/leetcode/Easy/Find Pivot Index"}}');var t=r(4848),i=r(8453),l=r(5537),a=r(9329);const o={},c="448 - Find All Numbers Disappeared in an Array",d={},u=[{value:"Problem Information",id:"problem-information",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Solution Approach",id:"solution-approach",level:2},{value:"Solution Code",id:"solution-code",level:2},{value:"Step-by-Step Explanation",id:"step-by-step-explanation",level:2},{value:"Common Mistakes and Pitfalls",id:"common-mistakes-and-pitfalls",level:2},{value:"Related Problems",id:"related-problems",level:2}];function h(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"448---find-all-numbers-disappeared-in-an-array",children:"448 - Find All Numbers Disappeared in an Array"})}),"\n",(0,t.jsx)(n.h2,{id:"problem-information",children:"Problem Information"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Difficulty:"})," Easy"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Category:"})," Array, Hash Table"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Link:"})," ",(0,t.jsx)(n.a,{href:"https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array",children:"LeetCode"})]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,t.jsxs)(n.p,{children:["Given an array ",(0,t.jsx)(n.code,{children:"nums"})," of ",(0,t.jsx)(n.code,{children:"n"})," integers where ",(0,t.jsx)(n.code,{children:"nums[i]"})," is in the range ",(0,t.jsx)(n.code,{children:"[1, n]"}),", return ",(0,t.jsx)(n.em,{children:"an array of all the integers in the range"})," ",(0,t.jsx)(n.code,{children:"[1, n]"})," ",(0,t.jsx)(n.em,{children:"that do not appear in"})," ",(0,t.jsx)(n.code,{children:"nums"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Input: nums = [4,3,2,7,8,2,3,1]\nOutput: [5,6]\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Input: nums = [1,1]\nOutput: [2]\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"n == nums.length"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"1 &lt;= n &lt;= 10^5"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"1 &lt;= nums[i] &lt;= n"})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Follow up:"})," Could you do it without extra space and in ",(0,t.jsx)(n.code,{children:"O(n)"})," runtime? You may assume the returned list does not count as extra space."]}),"\n",(0,t.jsx)(n.h2,{id:"solution-approach",children:"Solution Approach"}),"\n",(0,t.jsxs)(n.p,{children:["This problem can be efficiently solved using a hash table (or a set). The core idea is to iterate through the input array ",(0,t.jsx)(n.code,{children:"nums"})," and mark the presence of each number in the range [1, n]."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Here's a breakdown:"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Initialization:"})," Create a hash table (or set) to store the presence of each number from 1 to ",(0,t.jsx)(n.code,{children:"n"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Marking Presence:"})," Iterate through ",(0,t.jsx)(n.code,{children:"nums"}),". For each number ",(0,t.jsx)(n.code,{children:"num"})," in ",(0,t.jsx)(n.code,{children:"nums"}),", mark its presence in the hash table by setting the corresponding key to ",(0,t.jsx)(n.code,{children:"True"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Identifying Missing Numbers:"}),"  After processing all numbers in ",(0,t.jsx)(n.code,{children:"nums"}),", iterate through the range [1, n].  For each number ",(0,t.jsx)(n.code,{children:"i"}),", if it is not present (has a value of ",(0,t.jsx)(n.code,{children:"False"}),") in the hash table, add it to the result list."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"solution-code",children:"Solution Code"}),"\n",(0,t.jsxs)(l.A,{defaultValue:"python",groupId:"cody",values:[{label:"Python",value:"python"},{label:"JavaScript",value:"javascript"},{label:"Java",value:"java"},{label:"C#",value:"csharp"},{label:"Go",value:"go"}],children:[(0,t.jsx)(a.A,{value:"python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def findDisappearedNumbers(nums):\n    n = len(nums)\n    present = [False] * (n + 1)\n    for num in nums:\n        present[num] = True\n    result = []\n    for i in range(1, n + 1):\n        if not present[i]:\n            result.append(i)\n    return result\n"})})}),(0,t.jsx)(a.A,{value:"javascript",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"var findDisappearedNumbers = function(nums) {\n    const n = nums.length;\n    const present = Array(n + 1).fill(false);\n\n    for (let num of nums) {\n        present[num] = true;\n    }\n\n    const result = [];\n    for (let i = 1; i <= n; i++) {\n        if (!present[i]) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n"})})}),(0,t.jsx)(a.A,{value:"java",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"import java.util.*;\n\nclass Solution {\n    public int[] findDisappearedNumbers(int[] nums) {\n        int n = nums.length;\n        boolean[] present = new boolean[n + 1];\n\n        for (int num : nums) {\n            present[num] = true;\n        }\n\n        List<Integer> result = new ArrayList<>();\n        for (int i = 1; i <= n; i++) {\n            if (!present[i]) {\n                result.add(i);\n            }\n        }\n        return result.stream().mapToInt(i -> i).toArray();\n    }\n}\n"})})}),(0,t.jsx)(a.A,{value:"csharp",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"using System;\nusing System.Collections.Generic;\n\npublic class Solution {\n    public int[] FindDisappearedNumbers(int[] nums) {\n        int n = nums.Length;\n        bool[] present = new bool[n + 1];\n\n        for (int num : nums) {\n            present[num] = true;\n        }\n\n        List<int> result = new List<int>();\n        for (int i = 1; i <= n; i++) {\n            if (!present[i]) {\n                result.Add(i);\n            }\n        }\n        return result.ToArray();\n    }\n}\n"})})}),(0,t.jsx)(a.A,{value:"go",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:"func findDisappearedNumbers(nums []int) []int {\n    n := len(nums)\n    present := make([]bool, n+1)\n\n    for _, num := range nums {\n        present[num] = true\n    }\n\n    var result []int\n    for i := 1; i <= n; i++ {\n        if !present[i] {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n"})})})]}),"\n",(0,t.jsx)(n.h2,{id:"step-by-step-explanation",children:"Step-by-Step Explanation"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Create a Hash Table:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Initialize a boolean array ",(0,t.jsx)(n.code,{children:"present"})," of size ",(0,t.jsx)(n.code,{children:"n+1"})," (where ",(0,t.jsx)(n.code,{children:"n"})," is the length of the input array ",(0,t.jsx)(n.code,{children:"nums"}),"). This array will act as our hash table."]}),"\n",(0,t.jsxs)(n.li,{children:["Each index in ",(0,t.jsx)(n.code,{children:"present"})," corresponds to a number from 1 to ",(0,t.jsx)(n.code,{children:"n"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Initially, all elements in ",(0,t.jsx)(n.code,{children:"present"})," are set to ",(0,t.jsx)(n.code,{children:"False"}),", indicating that no numbers are present yet."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Mark Numbers:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Iterate through each number ",(0,t.jsx)(n.code,{children:"num"})," in the input array ",(0,t.jsx)(n.code,{children:"nums"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["For each ",(0,t.jsx)(n.code,{children:"num"}),", set the corresponding index in ",(0,t.jsx)(n.code,{children:"present"})," to ",(0,t.jsx)(n.code,{children:"True"}),'. This marks the number as "present" in our hash table.']}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Identify Missing Numbers:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Iterate from 1 to ",(0,t.jsx)(n.code,{children:"n"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["For each number ",(0,t.jsx)(n.code,{children:"i"})," in this range:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["If ",(0,t.jsx)(n.code,{children:"present[i]"})," is ",(0,t.jsx)(n.code,{children:"False"}),", it means that number ",(0,t.jsx)(n.code,{children:"i"})," is not present in the input array ",(0,t.jsx)(n.code,{children:"nums"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Append ",(0,t.jsx)(n.code,{children:"i"})," to the ",(0,t.jsx)(n.code,{children:"result"})," list."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Return Result:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Return the ",(0,t.jsx)(n.code,{children:"result"})," list, which contains all the missing numbers."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"common-mistakes-and-pitfalls",children:"Common Mistakes and Pitfalls"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Off-by-One Error:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Ensure the hash table size is ",(0,t.jsx)(n.code,{children:"n+1"})," to accommodate numbers from 1 to ",(0,t.jsx)(n.code,{children:"n"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Incorrect Indexing:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Verify that you are correctly using the number ",(0,t.jsx)(n.code,{children:"num"})," as the index in the ",(0,t.jsx)(n.code,{children:"present"})," array."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Space Complexity:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["If the input array ",(0,t.jsx)(n.code,{children:"nums"})," can be very large, be mindful of the space complexity of creating a hash table of size ",(0,t.jsx)(n.code,{children:"n+1"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"related-problems",children:"Related Problems"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://leetcode.com/problems/missing-number/",children:"Missing Number"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://leetcode.com/problems/first-missing-positive/",children:"First Missing Positive"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},9329:(e,n,r)=>{r.d(n,{A:()=>l});r(6540);var s=r(4164);const t={tabItem:"tabItem_Ymn6"};var i=r(4848);function l(e){let{children:n,hidden:r,className:l}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,s.A)(t.tabItem,l),hidden:r,children:n})}},5537:(e,n,r)=>{r.d(n,{A:()=>A});var s=r(6540),t=r(4164),i=r(5627),l=r(6347),a=r(372),o=r(604),c=r(1861),d=r(8749);function u(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:r}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:r,attributes:s,default:t}}=e;return{value:n,label:r,attributes:s,default:t}}))}(r);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function p(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:r}=e;const t=(0,l.W6)(),i=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,o.aZ)(i),(0,s.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(t.location.search);n.set(i,e),t.replace({...t.location,search:n.toString()})}),[i,t])]}function x(e){const{defaultValue:n,queryString:r=!1,groupId:t}=e,i=h(e),[l,o]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=r.find((e=>e.default))??r[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:i}))),[c,u]=m({queryString:r,groupId:t}),[x,j]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,i]=(0,d.Dv)(r);return[t,(0,s.useCallback)((e=>{r&&i.set(e)}),[r,i])]}({groupId:t}),b=(()=>{const e=c??x;return p({value:e,tabValues:i})?e:null})();(0,a.A)((()=>{b&&o(b)}),[b]);return{selectedValue:l,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),j(e)}),[u,j,i]),tabValues:i}}var j=r(9136);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=r(4848);function g(e){let{className:n,block:r,selectedValue:s,selectValue:l,tabValues:a}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),d=e=>{const n=e.currentTarget,r=o.indexOf(n),t=a[r].value;t!==s&&(c(n),l(t))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=o.indexOf(e.currentTarget)+1;n=o[r]??o[0];break}case"ArrowLeft":{const r=o.indexOf(e.currentTarget)-1;n=o[r]??o[o.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":r},n),children:a.map((e=>{let{value:n,label:r,attributes:i}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>{o.push(e)},onKeyDown:u,onClick:d,...i,className:(0,t.A)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":s===n}),children:r??n},n)}))})}function y(e){let{lazy:n,children:r,selectedValue:i}=e;const l=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===i));return e?(0,s.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:l.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function v(e){const n=x(e);return(0,f.jsxs)("div",{className:(0,t.A)("tabs-container",b.tabList),children:[(0,f.jsx)(g,{...n,...e}),(0,f.jsx)(y,{...n,...e})]})}function A(e){const n=(0,j.A)();return(0,f.jsx)(v,{...e,children:u(e.children)},String(n))}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>a});var s=r(6540);const t={},i=s.createContext(t);function l(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);