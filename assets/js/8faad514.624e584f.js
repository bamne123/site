"use strict";(self.webpackChunkmy_stie=self.webpackChunkmy_stie||[]).push([[7605],{2760:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"leetcode/Easy/Maximum Population Year","title":"1854 - Maximum Population Year","description":"Problem Information","source":"@site/docs/leetcode/Easy/1854-Maximum Population Year.md","sourceDirName":"leetcode/Easy","slug":"/leetcode/Easy/Maximum Population Year","permalink":"/site/docs/leetcode/Easy/Maximum Population Year","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/leetcode/Easy/1854-Maximum Population Year.md","tags":[],"version":"current","sidebarPosition":1854,"frontMatter":{},"sidebar":"leetcodeSidebar","previous":{"title":"977 - Squares of a Sorted Array","permalink":"/site/docs/leetcode/Easy/Squares of a Sorted Array"},"next":{"title":"4 - Median of Two Sorted Arrays","permalink":"/site/docs/leetcode/Hard/Median of Two Sorted Arrays"}}');var a=n(4848),l=n(8453);n(5537),n(9329);const i={},o="1854 - Maximum Population Year",s={},u=[{value:"Problem Information",id:"problem-information",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Hints",id:"hints",level:3},{value:"Solution Approach",id:"solution-approach",level:2},{value:"Video Explanation",id:"video-explanation",level:3},{value:"Complexity Analysis",id:"complexity-analysis",level:3},{value:"Code Implementation",id:"code-implementation",level:3},{value:"Step-by-Step Explanation",id:"step-by-step-explanation",level:3},{value:"Alternative Approaches",id:"alternative-approaches",level:2},{value:"Common Mistakes and Pitfalls",id:"common-mistakes-and-pitfalls",level:2},{value:"Related Problems",id:"related-problems",level:2}];function c(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"1854---maximum-population-year",children:"1854 - Maximum Population Year"})}),"\n",(0,a.jsx)(t.h2,{id:"problem-information",children:"Problem Information"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Difficulty:"})," Easy"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Category:"})," Array, Counting, Prefix Sum"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Link:"})," ",(0,a.jsx)(t.a,{href:"https://leetcode.com/problems/maximum-population-year/",children:"LeetCode"})]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,a.jsxs)(t.p,{children:["You are given a 2D integer array ",(0,a.jsx)(t.code,{children:"logs"})," where each ",(0,a.jsx)(t.code,{children:"logs[i] = [birth<sub>i</sub>, death<sub>i</sub>]"})," indicates the birth and death years of the ",(0,a.jsx)(t.code,{children:"i<sup>th</sup>"})," person."]}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.strong,{children:"population"})," of some year ",(0,a.jsx)(t.code,{children:"x"})," is the number of people alive during that year. The ",(0,a.jsx)(t.code,{children:"i<sup>th</sup>"})," person is counted in year ",(0,a.jsx)(t.code,{children:"x"}),"'s population if ",(0,a.jsx)(t.code,{children:"x"})," is in the ",(0,a.jsx)(t.strong,{children:"inclusive"})," range ",(0,a.jsx)(t.code,{children:"[birth<sub>i</sub>, death<sub>i</sub> - 1]"}),". Note that the person is ",(0,a.jsx)(t.strong,{children:"not"})," counted in the year that they die."]}),"\n",(0,a.jsxs)(t.p,{children:["Return ",(0,a.jsxs)(t.em,{children:["the ",(0,a.jsx)(t.strong,{children:"earliest"})," year with the ",(0,a.jsx)(t.strong,{children:"maximum population"}),"."]})]}),"\n",(0,a.jsx)(t.h3,{id:"hints",children:"Hints"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"solution-approach",children:"Solution Approach"}),"\n",(0,a.jsx)(t.h3,{id:"video-explanation",children:"Video Explanation"}),"\n",(0,a.jsx)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/NW_CNIwP3_E",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0}),"\n",(0,a.jsx)(t.h3,{id:"complexity-analysis",children:"Complexity Analysis"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Time Complexity:"})," O(n log n)","\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Sorting the ",(0,a.jsx)(t.code,{children:"logs"})," array takes O(n log n) time. The prefix sum calculation then takes O(n) time."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Space Complexity:"})," O(n)","\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"We use an array to store the prefix sum, which has a size of n."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(t.h3,{id:"code-implementation",children:"Code Implementation"}),"\n",(0,a.jsx)(t.h3,{id:"step-by-step-explanation",children:"Step-by-Step Explanation"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsxs)(t.li,{children:["Sort the ",(0,a.jsx)(t.code,{children:"logs"})," array based on the birth years."]}),"\n",(0,a.jsxs)(t.li,{children:["Create an array ",(0,a.jsx)(t.code,{children:"counts"})," to store the population count for each year. Initialize it with zeros."]}),"\n",(0,a.jsxs)(t.li,{children:["Iterate through the sorted ",(0,a.jsx)(t.code,{children:"logs"})," array. For each person:","\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Increment the population count in each year from their birth year to their death year - 1."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(t.li,{children:"Find the maximum population count and the corresponding year."}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"alternative-approaches",children:"Alternative Approaches"}),"\n",(0,a.jsx)(t.h2,{id:"common-mistakes-and-pitfalls",children:"Common Mistakes and Pitfalls"}),"\n",(0,a.jsx)(t.h2,{id:"related-problems",children:"Related Problems"})]})}function d(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},9329:(e,t,n)=>{n.d(t,{A:()=>i});n(6540);var r=n(4164);const a={tabItem:"tabItem_Ymn6"};var l=n(4848);function i(e){let{children:t,hidden:n,className:i}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,i),hidden:n,children:t})}},5537:(e,t,n)=>{n.d(t,{A:()=>w});var r=n(6540),a=n(4164),l=n(5627),i=n(6347),o=n(372),s=n(604),u=n(1861),c=n(8749);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}(n);return function(e){const t=(0,u.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.W6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s.aZ)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function x(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,l=h(e),[i,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:l}))),[u,d]=m({queryString:n,groupId:a}),[x,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,l]=(0,c.Dv)(n);return[a,(0,r.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:a}),f=(()=>{const e=u??x;return p({value:e,tabValues:l})?e:null})();(0,o.A)((()=>{f&&s(f)}),[f]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);s(e),d(e),b(e)}),[d,b,l]),tabValues:l}}var b=n(9136);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=n(4848);function v(e){let{className:t,block:n,selectedValue:r,selectValue:i,tabValues:o}=e;const s=[],{blockElementScrollPositionUntilNextRender:u}=(0,l.a_)(),c=e=>{const t=e.currentTarget,n=s.indexOf(t),a=o[n].value;a!==r&&(u(t),i(a))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=s.indexOf(e.currentTarget)+1;t=s[n]??s[0];break}case"ArrowLeft":{const n=s.indexOf(e.currentTarget)-1;t=s[n]??s[s.length-1];break}}t?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":n},t),children:o.map((e=>{let{value:t,label:n,attributes:l}=e;return(0,y.jsx)("li",{role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:e=>{s.push(e)},onKeyDown:d,onClick:c,...l,className:(0,a.A)("tabs__item",f.tabItem,l?.className,{"tabs__item--active":r===t}),children:n??t},t)}))})}function j(e){let{lazy:t,children:n,selectedValue:l}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===l));return e?(0,r.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:i.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==l})))})}function g(e){const t=x(e);return(0,y.jsxs)("div",{className:(0,a.A)("tabs-container",f.tabList),children:[(0,y.jsx)(v,{...t,...e}),(0,y.jsx)(j,{...t,...e})]})}function w(e){const t=(0,b.A)();return(0,y.jsx)(g,{...e,children:d(e.children)},String(t))}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var r=n(6540);const a={},l=r.createContext(a);function i(e){const t=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(l.Provider,{value:t},e.children)}}}]);