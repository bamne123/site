"use strict";(self.webpackChunkmy_stie=self.webpackChunkmy_stie||[]).push([[5663],{4632:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"leetcode/Easy/Palindrome Number","title":"Palindrome Number","description":"Palindrome Number","source":"@site/docs/leetcode/Easy/9-Palindrome Number.md","sourceDirName":"leetcode/Easy","slug":"/leetcode/Easy/Palindrome Number","permalink":"/site/docs/leetcode/Easy/Palindrome Number","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/leetcode/Easy/9-Palindrome Number.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{},"sidebar":"leetcodeSidebar","previous":{"title":"Two Sum","permalink":"/site/docs/leetcode/Easy/Two Sum"},"next":{"title":"Roman to Integer","permalink":"/site/docs/leetcode/Easy/Roman to Integer"}}');var s=t(4848),o=t(8453);const r={},l=void 0,a={},c=[{value:"Problem Statement",id:"problem-statement",level:3},{value:"Examples",id:"examples",level:3},{value:"Constraints",id:"constraints",level:3},{value:"Solution Approach",id:"solution-approach",level:3},{value:"Solution Code",id:"solution-code",level:3},{value:"Step-by-Step Explanation",id:"step-by-step-explanation",level:3},{value:"Time Complexity",id:"time-complexity",level:3},{value:"Space Complexity",id:"space-complexity",level:3},{value:"Alternative Solution using Python&#39;s built-in <code>==</code> Operator",id:"alternative-solution-using-pythons-built-in--operator",level:3}];function d(e){const n={code:"code",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Palindrome Number"})}),"\n",(0,s.jsx)(n.h3,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,s.jsxs)(n.p,{children:["Given a non-negative integer ",(0,s.jsx)(n.code,{children:"n"}),", return ",(0,s.jsx)(n.code,{children:"true"})," if it is a palindrome number, and return ",(0,s.jsx)(n.code,{children:"false"})," otherwise."]}),"\n",(0,s.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Input: 121\nOutput: ",(0,s.jsx)(n.code,{children:"true"}),"\nExplanation: ",(0,s.jsx)(n.code,{children:"121"})," is a palindrome number."]}),"\n",(0,s.jsxs)(n.li,{children:["Input: 123\nOutput: ",(0,s.jsx)(n.code,{children:"false"}),"\nExplanation: ",(0,s.jsx)(n.code,{children:"123"})," is not a palindrome number."]}),"\n",(0,s.jsxs)(n.li,{children:["Input: 12321\nOutput: ",(0,s.jsx)(n.code,{children:"true"}),"\nExplanation: ",(0,s.jsx)(n.code,{children:"12321"})," is a palindrome number."]}),"\n",(0,s.jsxs)(n.li,{children:["Input: 123456\nOutput: ",(0,s.jsx)(n.code,{children:"false"}),"\nExplanation: ",(0,s.jsx)(n.code,{children:"123456"})," is not a palindrome number."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"constraints",children:"Constraints"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Input: A non-negative integer."}),"\n",(0,s.jsx)(n.li,{children:"Output: A boolean value."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"solution-approach",children:"Solution Approach"}),"\n",(0,s.jsxs)(n.p,{children:["We can solve this problem by iterating over the input string and comparing characters from the start and end of the string. If the characters match, we move to the next character in both directions. If we reach the end of the string without finding a match, we return ",(0,s.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"solution-code",children:"Solution Code"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def isPalindrome(n):\n    if n < 0:\n        return False\n    n_str = str(n)\n    left = 0\n    right = len(n_str) - 1\n    while left < right:\n        if n_str[left] != n_str[right]:\n            return False\n        left += 1\n        right -= 1\n    return True\n"})}),"\n",(0,s.jsx)(n.h3,{id:"step-by-step-explanation",children:"Step-by-Step Explanation"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Convert the input integer to a string using ",(0,s.jsx)(n.code,{children:"str(n)"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Initialize two pointers, ",(0,s.jsx)(n.code,{children:"left"})," and ",(0,s.jsx)(n.code,{children:"right"}),", to the start and end of the string, respectively."]}),"\n",(0,s.jsxs)(n.li,{children:["Start a loop that continues until ",(0,s.jsx)(n.code,{children:"left"})," is no longer less than ",(0,s.jsx)(n.code,{children:"right"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Inside the loop, compare the characters at the ",(0,s.jsx)(n.code,{children:"left"})," and ",(0,s.jsx)(n.code,{children:"right"})," indices. If they don't match, return ",(0,s.jsx)(n.code,{children:"False"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["If the loop completes without finding a mismatch, return ",(0,s.jsx)(n.code,{children:"True"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"time-complexity",children:"Time Complexity"}),"\n",(0,s.jsx)(n.p,{children:"The time complexity of this solution is O(n/2), where n is the input integer. In Big O notation, this can be simplified to O(n)."}),"\n",(0,s.jsx)(n.h3,{id:"space-complexity",children:"Space Complexity"}),"\n",(0,s.jsx)(n.p,{children:"The space complexity of this solution is O(1), as we only use a constant amount of space to store the pointers and the input string."}),"\n",(0,s.jsxs)(n.h3,{id:"alternative-solution-using-pythons-built-in--operator",children:["Alternative Solution using Python's built-in ",(0,s.jsx)(n.code,{children:"=="})," Operator"]}),"\n",(0,s.jsxs)(n.p,{children:["We can also solve this problem by using Python's built-in ",(0,s.jsx)(n.code,{children:"=="})," operator, which checks if two strings are equal."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def isPalindrome(n):\n    if n < 0:\n        return False\n    return str(n) == str(n)[::-1]\n"})}),"\n",(0,s.jsx)(n.p,{children:"This solution is more concise and efficient, but it may not be as readable as the original solution."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var i=t(6540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);