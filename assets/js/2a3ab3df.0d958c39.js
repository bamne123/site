"use strict";(self.webpackChunkmy_stie=self.webpackChunkmy_stie||[]).push([[3275],{821:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"leetcode/Easy/Palindrome Number","title":"**Palindrome Number**","description":"Problem Statement","source":"@site/docs/leetcode/Easy/Palindrome Number.md","sourceDirName":"leetcode/Easy","slug":"/leetcode/Easy/Palindrome Number","permalink":"/site/docs/leetcode/Easy/Palindrome Number","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/leetcode/Easy/Palindrome Number.md","tags":[],"version":"current","frontMatter":{},"sidebar":"leetcodeSidebar","previous":{"title":"Welcome","permalink":"/site/docs/leetcode/sytem-design/intro"},"next":{"title":"Roman to Integer","permalink":"/site/docs/leetcode/Easy/Roman to Integer"}}');var i=t(4848),o=t(8453);const s={},l="Palindrome Number",a={},d=[{value:"<strong>Problem Statement</strong>",id:"problem-statement",level:2},{value:"<strong>Example</strong>",id:"example",level:2},{value:"<strong>Time &amp; Space Complexity</strong>",id:"time--space-complexity",level:2},{value:"<strong>Solution</strong>",id:"solution",level:2},{value:"<strong>Example Use Cases</strong>",id:"example-use-cases",level:2},{value:"LeetCode Official Solution",id:"leetcode-official-solution",level:3},{value:"LeetCode Solution URL",id:"leetcode-solution-url",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"palindrome-number",children:(0,i.jsx)(n.strong,{children:"Palindrome Number"})})}),"\n",(0,i.jsx)(n.h2,{id:"problem-statement",children:(0,i.jsx)(n.strong,{children:"Problem Statement"})}),"\n",(0,i.jsxs)(n.p,{children:["Given a non-negative integer ",(0,i.jsx)(n.code,{children:"n"}),", determine if it is a palindrome number."]}),"\n",(0,i.jsx)(n.h2,{id:"example",children:(0,i.jsx)(n.strong,{children:"Example"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Input: 12321"}),"\n",(0,i.jsxs)(n.li,{children:["Output: ",(0,i.jsx)(n.code,{children:"true"})]}),"\n",(0,i.jsxs)(n.li,{children:["Explanation: ",(0,i.jsx)(n.code,{children:"12321"})," is a palindrome number."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"time--space-complexity",children:(0,i.jsx)(n.strong,{children:"Time & Space Complexity"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Time Complexity: O(log n)"}),"\n",(0,i.jsx)(n.li,{children:"Space Complexity: O(1)"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"solution",children:(0,i.jsx)(n.strong,{children:"Solution"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:'# Solution\n\n## Explanation\n### Explanation of the solution\n\nThe key insight to solving this problem is to realize that a palindrome number is a number that reads the same forward and backward.\n\n### Algorithm\n\n1.  Convert the number to a string.\n2.  Compare the string with its reverse.\n3.  If they are the same, the number is a palindrome.\n\n### Code\n\n```python\ndef is_palindrome_number(n: int) -> bool:\n    """\n    Returns true if the number is a palindrome, false otherwise.\n\n    Args:\n    n (int): The number to check.\n\n    Returns:\n    bool: True if the number is a palindrome, false otherwise.\n    """\n    # Convert the number to a string\n    num_str = str(n)\n    \n    # Compare the string with its reverse\n    return num_str == num_str[::-1]\n'})}),"\n",(0,i.jsx)(n.h2,{id:"example-use-cases",children:(0,i.jsx)(n.strong,{children:"Example Use Cases"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:"# Test cases\n\n# Test case 1: Palindrome number\nprint(is_palindrome_number(12321))  # Output: `true`\n\n# Test case 2: Non-palindrome number\nprint(is_palindrome_number(12345))  # Output: `false`\n\n# Test case 3: Edge case (single digit number)\nprint(is_palindrome_number(1))  # Output: `true`\n"})}),"\n",(0,i.jsx)(n.h3,{id:"leetcode-official-solution",children:"LeetCode Official Solution"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:'# LeetCode Official Solution\n\n## Explanation\n### Explanation of the solution\n\nThe problem is solved using a two-pointer technique. We initialize two pointers, one at the start and one at the end of the string representation of the number.\n\n1.  We compare the characters at the start and end pointers. If they are the same, we move both pointers forward.\n2.  If we reach the end of the string without finding a match, we return false.\n3.  If we successfully compare all pairs of characters without finding a mismatch, we return true.\n\n### Code\n\n```python\ndef is_palindrome_number(n):\n    """\n    Returns true if the number is a palindrome, false otherwise.\n\n    Args:\n    n (int): The number to check.\n\n    Returns:\n    bool: True if the number is a palindrome, false otherwise.\n    """\n    # Convert the number to a string\n    num_str = str(n)\n    \n    # Initialize two pointers\n    left = 0\n    right = len(num_str) - 1\n    \n    # Compare characters at the start and end pointers\n    while left < right:\n        if num_str[left] != num_str[right]:\n            return False\n        left += 1\n        right -= 1\n    \n    return True\n'})}),"\n",(0,i.jsx)(n.h3,{id:"leetcode-solution-url",children:"LeetCode Solution URL"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/palindrome-number/",children:"Official LeetCode Solution"})})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var r=t(6540);const i={},o=r.createContext(i);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);