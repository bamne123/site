"use strict";(self.webpackChunkmy_stie=self.webpackChunkmy_stie||[]).push([[7330],{3792:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"leetcode/Easy/Best Time to Buy and Sell Stock","title":"121 - Best Time to Buy and Sell Stock","description":"Problem Information","source":"@site/docs/leetcode/Easy/121-Best Time to Buy and Sell Stock.md","sourceDirName":"leetcode/Easy","slug":"/leetcode/Easy/Best Time to Buy and Sell Stock","permalink":"/site/docs/leetcode/Easy/Best Time to Buy and Sell Stock","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/leetcode/Easy/121-Best Time to Buy and Sell Stock.md","tags":[],"version":"current","sidebarPosition":121,"frontMatter":{},"sidebar":"leetcodeSidebar","previous":{"title":"88 - Merge Sorted Array","permalink":"/site/docs/leetcode/Easy/Merge Sorted Array"},"next":{"title":"169 - Majority Element","permalink":"/site/docs/leetcode/Easy/Majority Element"}}');var r=t(4848),l=t(8453),a=t(5537),s=t(9329);const o={},c="121 - Best Time to Buy and Sell Stock",u={},d=[{value:"Problem Information",id:"problem-information",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Examples",id:"examples",level:3},{value:"Constraints",id:"constraints",level:3},{value:"Hints",id:"hints",level:3},{value:"Solution Approach",id:"solution-approach",level:2},{value:"Complexity Analysis",id:"complexity-analysis",level:3},{value:"Code Implementation",id:"code-implementation",level:3},{value:"Step-by-Step Explanation",id:"step-by-step-explanation",level:3},{value:"Alternative Approaches",id:"alternative-approaches",level:2},{value:"Common Mistakes and Pitfalls",id:"common-mistakes-and-pitfalls",level:2},{value:"Related Problems",id:"related-problems",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"121---best-time-to-buy-and-sell-stock",children:"121 - Best Time to Buy and Sell Stock"})}),"\n",(0,r.jsx)(n.h2,{id:"problem-information",children:"Problem Information"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Difficulty:"})," Easy"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Category:"})," Array, Dynamic Programming"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Link:"})," ",(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock",children:"LeetCode"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,r.jsxs)(n.p,{children:["You are given an array ",(0,r.jsx)(n.code,{children:"prices"})," where ",(0,r.jsx)(n.code,{children:"prices[i]"})," is the price of a given stock on the ",(0,r.jsx)(n.code,{children:"ith"})," day.\nYou want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.\nReturn the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return ",(0,r.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.p,{children:"Input: prices = [7,1,5,3,6,4]\nOutput: 5\nExplanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.\nNote that buying on day 2 and selling on day 1 is not allowed because you must buy before you sell."}),"\n",(0,r.jsx)(n.h3,{id:"constraints",children:"Constraints"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"1 <= prices.length <= 10^5"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"0 <= prices[i] <= 10^4"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"hints",children:"Hints"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The problem is to find the maximum difference between two numbers in the array such that the smaller number appears before the larger number."}),"\n",(0,r.jsx)(n.li,{children:"Use a variable to track the minimum price seen so far."}),"\n",(0,r.jsx)(n.li,{children:"Use a variable to track the maximum profit seen so far."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"solution-approach",children:"Solution Approach"}),"\n",(0,r.jsxs)(n.p,{children:["The solution iterates through the ",(0,r.jsx)(n.code,{children:"prices"})," array, keeping track of the minimum price seen so far and the maximum profit that can be achieved by selling at the current price. At each iteration, the minimum price is updated if the current price is smaller than the current minimum price. The maximum profit is updated if the profit that can be achieved by selling at the current price is greater than the current maximum profit."]}),"\n",(0,r.jsx)(n.h3,{id:"complexity-analysis",children:"Complexity Analysis"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Time Complexity:"})," O(n)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The algorithm iterates through the ",(0,r.jsx)(n.code,{children:"prices"})," array once."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Space Complexity:"})," O(1)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The algorithm uses only a constant amount of extra space."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"code-implementation",children:"Code Implementation"}),"\n",(0,r.jsxs)(a.A,{defaultValue:"python",groupId:"cody",values:[{label:"python",value:"python"},{label:"javascript",value:"javascript"},{label:"go",value:"go"},{label:"java",value:"java"},{label:"csharp",value:"csharp"}],children:[(0,r.jsx)(s.A,{value:"python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def maxProfit(self, prices: List[int]) -> int:\n        if not prices:\n            return 0\n        \n        # Initialize buy at 1st pointer and profit at 0\n        buy, profit = prices[0], 0\n\n        # Initialize sell at 2nd pointer\n        for sell in prices[1:]:\n            if sell > buy:\n                # Take max profit\n                profit = max(profit, sell - buy)\n            else:\n                # if sell is less than buy then Set buy with sell\n                buy = sell\n\n        return profit\n"})})}),(0,r.jsx)(s.A,{value:"javascript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"/**\n * @param {number[]} prices\n * @return {number}\n */\nvar maxProfit = function(prices) {\n    if(prices.length == 0){\n        return 0;\n    }\n\n    let buy = prices[0];\n    let profit = 0;\n\n    for(let i = 1; i < prices.length; i++){\n        let sell = prices[i];\n\n        if(sell > buy){\n            profit = Math.max(profit, sell - buy);\n        } else {\n            buy = sell\n        }\n    }\n\n    return profit;\n};\n"})})}),(0,r.jsx)(s.A,{value:"go",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func maxProfit(prices []int) int {\n    minPrice := int(1e9 + 7)\n    maxProfit := 0\n    for _, price := range prices {\n        if price < minPrice {\n            minPrice = price\n        } else if price - minPrice > maxProfit {\n            maxProfit = price - minPrice\n        }\n    }\n    return maxProfit\n}\n"})})}),(0,r.jsx)(s.A,{value:"java",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"class Solution {\n    public int maxProfit(int[] prices) {\n        int minPrice = Integer.MAX_VALUE;\n        int maxProfit = 0;\n        for (int price : prices) {\n            if (price < minPrice) {\n                minPrice = price;\n            } else if (price - minPrice > maxProfit) {\n                maxProfit = price - minPrice;\n            }\n        }\n        return maxProfit;\n    }\n}\n"})})}),(0,r.jsx)(s.A,{value:"csharp",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"public class Solution {\n    public int MaxProfit(int[] prices) {\n        int minPrice = int.MaxValue;\n        int maxProfit = 0;\n        foreach (int price in prices) {\n            if (price < minPrice) {\n                minPrice = price;\n            } else if (price - minPrice > maxProfit) {\n                maxProfit = price - minPrice;\n            }\n        }\n        return maxProfit;\n    }\n}\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"step-by-step-explanation",children:"Step-by-Step Explanation"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Initialize ",(0,r.jsx)(n.code,{children:"min_price"})," to infinity and ",(0,r.jsx)(n.code,{children:"max_profit"})," to 0."]}),"\n",(0,r.jsxs)(n.li,{children:["Iterate through the ",(0,r.jsx)(n.code,{children:"prices"})," array."]}),"\n",(0,r.jsxs)(n.li,{children:["If the current price is less than ",(0,r.jsx)(n.code,{children:"min_price"}),", update ",(0,r.jsx)(n.code,{children:"min_price"})," to the current price."]}),"\n",(0,r.jsxs)(n.li,{children:["If the current price minus ",(0,r.jsx)(n.code,{children:"min_price"})," is greater than ",(0,r.jsx)(n.code,{children:"max_profit"}),", update ",(0,r.jsx)(n.code,{children:"max_profit"})," to the current price minus ",(0,r.jsx)(n.code,{children:"min_price"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Return ",(0,r.jsx)(n.code,{children:"max_profit"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"alternative-approaches",children:"Alternative Approaches"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Brute Force"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Time Complexity: O(n^2)"}),"\n",(0,r.jsx)(n.li,{children:"Space Complexity: O(1)"}),"\n",(0,r.jsx)(n.li,{children:"Trade-offs: This approach checks every possible pair of buy and sell days, which is inefficient."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Dynamic Programming"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Time Complexity: O(n)"}),"\n",(0,r.jsx)(n.li,{children:"Space Complexity: O(1)"}),"\n",(0,r.jsx)(n.li,{children:"Trade-offs: Similar to the optimal solution, but may be less intuitive."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"common-mistakes-and-pitfalls",children:"Common Mistakes and Pitfalls"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Failing to initialize ",(0,r.jsx)(n.code,{children:"min_price"})," to a sufficiently large value."]}),"\n",(0,r.jsx)(n.li,{children:"Not handling the case where no profit can be made (returning 0)."}),"\n",(0,r.jsx)(n.li,{children:"Trying to sell before buying."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"related-problems",children:"Related Problems"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/",children:"122. Best Time to Buy and Sell Stock II"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/",children:"123. Best Time to Buy and Sell Stock III"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},9329:(e,n,t)=>{t.d(n,{A:()=>a});t(6540);var i=t(4164);const r={tabItem:"tabItem_Ymn6"};var l=t(4848);function a(e){let{children:n,hidden:t,className:a}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,i.A)(r.tabItem,a),hidden:t,children:n})}},5537:(e,n,t)=>{t.d(n,{A:()=>S});var i=t(6540),r=t(4164),l=t(5627),a=t(6347),s=t(372),o=t(604),c=t(1861),u=t(8749);function d(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:i,default:r}}=e;return{value:n,label:t,attributes:i,default:r}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const r=(0,a.W6)(),l=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o.aZ)(l),(0,i.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(r.location.search);n.set(l,e),r.replace({...r.location,search:n.toString()})}),[l,r])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,l=h(e),[a,o]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=t.find((e=>e.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:l}))),[c,d]=m({queryString:t,groupId:r}),[f,x]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,l]=(0,u.Dv)(t);return[r,(0,i.useCallback)((e=>{t&&l.set(e)}),[t,l])]}({groupId:r}),b=(()=>{const e=c??f;return p({value:e,tabValues:l})?e:null})();(0,s.A)((()=>{b&&o(b)}),[b]);return{selectedValue:a,selectValue:(0,i.useCallback)((e=>{if(!p({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),x(e)}),[d,x,l]),tabValues:l}}var x=t(9136);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=t(4848);function y(e){let{className:n,block:t,selectedValue:i,selectValue:a,tabValues:s}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.a_)(),u=e=>{const n=e.currentTarget,t=o.indexOf(n),r=s[t].value;r!==i&&(c(n),a(r))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:s.map((e=>{let{value:n,label:t,attributes:l}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>{o.push(e)},onKeyDown:d,onClick:u,...l,className:(0,r.A)("tabs__item",b.tabItem,l?.className,{"tabs__item--active":i===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:l}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===l));return e?(0,i.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==l})))})}function g(e){const n=f(e);return(0,j.jsxs)("div",{className:(0,r.A)("tabs-container",b.tabList),children:[(0,j.jsx)(y,{...n,...e}),(0,j.jsx)(v,{...n,...e})]})}function S(e){const n=(0,x.A)();return(0,j.jsx)(g,{...e,children:d(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var i=t(6540);const r={},l=i.createContext(r);function a(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);