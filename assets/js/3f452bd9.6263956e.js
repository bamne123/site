"use strict";(self.webpackChunkmy_stie=self.webpackChunkmy_stie||[]).push([[7872],{3833:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"leetcode/Medium/3Sum","title":"**3Sum**","description":"Problem Statement","source":"@site/docs/leetcode/Medium/3Sum.md","sourceDirName":"leetcode/Medium","slug":"/leetcode/Medium/3Sum","permalink":"/site/docs/leetcode/Medium/3Sum","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/leetcode/Medium/3Sum.md","tags":[],"version":"current","frontMatter":{},"sidebar":"leetcodeSidebar","previous":{"title":"3Sum Closest","permalink":"/site/docs/leetcode/Medium/3Sum Closest"},"next":{"title":"**4Sum**","permalink":"/site/docs/leetcode/Medium/4Sum"}}');var s=n(4848),l=n(8453);const r={},o="3Sum",u={},a=[{value:"<strong>Problem Statement</strong>",id:"problem-statement",level:2},{value:"Solution",id:"solution",level:3},{value:"Example Use Cases",id:"example-use-cases",level:3},{value:"Time Complexity",id:"time-complexity",level:3},{value:"Space Complexity",id:"space-complexity",level:3},{value:"LeetCode Official Solution",id:"leetcode-official-solution",level:3}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"3sum",children:(0,s.jsx)(t.strong,{children:"3Sum"})})}),"\n",(0,s.jsx)(t.h2,{id:"problem-statement",children:(0,s.jsx)(t.strong,{children:"Problem Statement"})}),"\n",(0,s.jsxs)(t.p,{children:["Given an array of integers ",(0,s.jsx)(t.code,{children:"nums"})," and an integer ",(0,s.jsx)(t.code,{children:"k"}),", return the ",(0,s.jsx)(t.code,{children:"k"})," most likely candidates for the given ",(0,s.jsx)(t.code,{children:"k"})," sum."]}),"\n",(0,s.jsx)(t.h3,{id:"solution",children:"Solution"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'def threeSum(nums, k):\n    """\n    Returns the k most likely candidates for the given k sum.\n\n    Args:\n    - nums (list): A list of integers.\n    - k (int): The number of candidates to return.\n\n    Returns:\n    - list: A list of tuples, where each tuple contains three integers that sum to the given value.\n    """\n    nums.sort()  # Sort the array to apply two-pointer trick\n    result = []  # Initialize an empty list to store the result\n\n    # Iterate over the array\n    for i in range(len(nums) - 2):\n        # Skip duplicate values for the same sum\n        if i > 0 and nums[i] == nums[i - 1]:\n            continue\n\n        # Initialize two pointers\n        left, right = i + 1, len(nums) - 1\n\n        while left < right:\n            total = nums[i] + nums[left] + nums[right]\n            if total < 0:\n                left += 1\n            elif total > 0:\n                right -= 1\n            else:\n                # Add the candidates to the result\n                result.append((nums[i], nums[left], nums[right]))\n                # Skip duplicate values for the same sum\n                while left < right and nums[left] == nums[left + 1]:\n                    left += 1\n                while left < right and nums[right] == nums[right - 1]:\n                    right -= 1\n                left += 1\n                right -= 1\n\n    # Return the k most likely candidates\n    return result[:k]\n'})}),"\n",(0,s.jsx)(t.h3,{id:"example-use-cases",children:"Example Use Cases"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"print(threeSum([1, 2, 3, 4, 5], 2))\n# Output: [(1, 2), (2, 3)]\n\nprint(threeSum([-1, 0, 1, 2, -1, -4], 4))\n# Output: [(-1, -1, 3), (0, 1, 4)]\n\nprint(threeSum([0, 0, 0, 0], 1))\n# Output: [(0, 0, 0)]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"time-complexity",children:"Time Complexity"}),"\n",(0,s.jsx)(t.p,{children:"The time complexity of this solution is O(n^2), where n is the length of the input array. This is because we are using two nested loops to find the candidates."}),"\n",(0,s.jsx)(t.h3,{id:"space-complexity",children:"Space Complexity"}),"\n",(0,s.jsx)(t.p,{children:"The space complexity of this solution is O(n), where n is the length of the input array. This is because we are storing the result in a list."}),"\n",(0,s.jsx)(t.h3,{id:"leetcode-official-solution",children:"LeetCode Official Solution"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'def threeSum(nums, k):\n    """\n    Returns the k most likely candidates for the given k sum.\n\n    Args:\n    - nums (list): A list of integers.\n    - k (int): The number of candidates to return.\n\n    Returns:\n    - list: A list of tuples, where each tuple contains three integers that sum to the given value.\n    """\n    nums.sort()  # Sort the array to apply two-pointer trick\n    result = []  # Initialize an empty list to store the result\n\n    for i in range(len(nums) - 2):\n        # Skip duplicate values for the same sum\n        if i > 0 and nums[i] == nums[i - 1]:\n            continue\n\n        left, right = i + 1, len(nums) - 1\n        while left < right:\n            total = nums[i] + nums[left] + nums[right]\n            if total < 0:\n                left += 1\n            elif total > 0:\n                right -= 1\n            else:\n                # Add the candidates to the result\n                result.append((nums[i], nums[left], nums[right]))\n                # Skip duplicate values for the same sum\n                while left < right and nums[left] == nums[left + 1]:\n                    left += 1\n                while left < right and nums[right] == nums[right - 1]:\n                    right -= 1\n                left += 1\n                right -= 1\n\n    return result[:k]\n'})}),"\n",(0,s.jsx)(t.p,{children:"This solution is provided by the LeetCode official team, and it is based on the original solution from the LeetCode official documentation."})]})}function m(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var i=n(6540);const s={},l=i.createContext(s);function r(e){const t=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(l.Provider,{value:t},e.children)}}}]);